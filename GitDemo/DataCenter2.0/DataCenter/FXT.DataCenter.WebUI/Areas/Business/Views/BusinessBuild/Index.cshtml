@using Webdiyer.WebControls.Mvc
@using FXT.DataCenter.Domain.Models
@model PagedList<Dat_Building_Biz>
@{
    ViewBag.Title = "商业楼栋";
}
@section StyleSheet{
    <style type="text/css">
        select
        {
            margin: 1px;
            width: 150px;
        }

        .p5
        {
            padding: 0px;
            padding-top: 5px;
            line-height: 200%;
            background: #fbfbfb;
        }

            .p5 label
            {
                width: 100px;
            }

            .p5 select
            {
                width: 133px;
            }

        #hourslider
        {
            display: inline-block;
            width: 120px;
            margin-top: 10px;
            margin-left: 30px;
        }

        .scrollBar
        {
            width: 100%;
            overflow: scroll;
            overflow-x: scroll;
            overflow-y: hidden;
        }
    </style>
}
@section Javascript{
    <script type="text/javascript">
        
        //面包屑导航
        $("#navigation .breadcrumb li:eq(1)").remove();
        $("#navigation .breadcrumb li:eq(2)").remove();
        var html = "<li><span><a href=\"/Business/BusinessStreet/Index\">商业街</a></span><i class=\"icon-angle-right\"></i></li>";
        html += " <li><span>商业楼栋</span></li>";
        $("ul.breadcrumb").append(html);

        var subAreaId = "@ViewBag.SubAreaId";
        BindSubArea(subAreaId);
        function BindSubArea(aid)
        {
            var areaId = $("#AreaId").find("option:selected").val();
            var areaListUrl = "@Url.Action("GetSubAreaList")";
            $.post(areaListUrl, { areaId: areaId }, function (json) {
                var html = "<option value='-1'>请选择</option>";
                if (json.flag) {
                    for (var i = 0; i < json.data.length; i++) {
                        if (json.data[i].SubAreaId == aid) {
                            html += "<option value='" + json.data[i].SubAreaId + "' selected='selected'>"
                            html += json.data[i].SubAreaName;
                            html += "</option>";
                        } else {
                            html += "<option value='" + json.data[i].SubAreaId + "'>"
                            html += json.data[i].SubAreaName;
                            html += "</option>";
                        }
                    }
                }
                $("#SubAreaId").empty().append(html);
            }, "json");
        }
        $(function () {
            //日期控件渲染
            $("#OpenDate, #OpenDateEnd").datepicker({ format: 'yyyy-mm-dd' });
           
            $("#AreaId").change(function () {
                BindSubArea(-1);
            });
            //删除
            $("#delete").unbind();
            $("#delete").click(function () {
                var ids = [];
                var checks = $("input[name='ids']:checked");
                if (checks.length == 0) {
                    alert("请选择要删除的数据");
                    return;
                }
                if (confirm("是否确定删除？")) {
                    checks.each(function () {
                        ids.push($(this).val());
                    });
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("DeleteBuild")',
                        data: { ids: ids },
                        traditional: true,
                        success: function (data) {
                            if (data.result) {
                                if (data.msg != "") {
                                    alert(data.msg);
                                }
                                location.reload();
                            } else {
                                alert(data.msg);
                            }
                        }
                    });
                }

            });
            //导出
            $("#btnExport").bind("click", function () {
                $("#search").attr("action", "/Business/BusinessBuild/ExportBuild");
            });
            //查询
            $("#btnRetrive").bind("click", function () {
                $("#search").attr("action","/Business/BusinessBuild/Index");
                var startdate = $.trim($("#OpenDate").val()), enddate = $.trim($("#OpenDateEnd").val());
                if (startdate != null && enddate != null) {
                    startdate = startdate.replace(/-/g, "/");
                    enddate = enddate.replace(/-/g, "/");
                    var time_start = new Date(startdate);
                    var time_end = new Date(enddate);
                    if (Date.parse(time_start) - Date.parse(time_end) > 0) {
                        alert("开业起始日期的范围有误");
                        return false;
                    }
                }
            });
        });
        function view(obj, projectId,buildingId) {
            $.get('@Url.Action("GetFloorCount", "BusinessBuild")', { ProjectId: projectId, BuildingId: buildingId }, function (data) {
                $(obj).html('<i class="icon-eye-close"></i>&nbsp;' + data);
                $(obj).attr("href", "/Business/BusinessFloor/Index?projectId=" + projectId + "&buildingId="+buildingId);
            });
        }
    </script>
    @{Html.RegisterMvcPagerScriptResource();}
}
<div style="text-align: right;">
    <a style="cursor: pointer;" id="control">收起∧</a>
</div>
<div class="row-fluid" id="condi">
    @using (Html.BeginForm("Index", "BusinessBuild", null, FormMethod.Get, new { id = "search", @class = "form-inline" }))
    { 
        <table style="width: 100%; margin-bottom: 10px; line-height: 35px;">
            <tr>
                <td>楼栋名称:
                </td>
                <td>@Html.TextBox("BuildingName", Request["BuildingName"], new { @style = "width:137px;" })
                </td>
                <td>楼栋商业类型:
                </td>
                <td>@Html.DropDownList("BuildingBizType", ViewBag.BuildingBizTypeName as List<SelectListItem>)
                </td>
            </tr>
            <tr>
                <td>行政区:
                </td>
                <td>
                    @Html.DropDownList("AreaId", ViewBag.AreaList as List<SelectListItem>)
                </td>
                <td>商圈:
                </td>
                <td>
                    @Html.DropDownList("SubAreaId", new List<SelectListItem> { new SelectListItem { Value = "-1", Text = "请选择" } })
                </td>
            </tr>
            <tr>
                <td>临路类型:
                </td>
                <td>@Html.DropDownList("ProRoad", ViewBag.ProRoadName as List<SelectListItem>)
                </td>
                <td>商业阻隔:
                </td>
                <td>@Html.DropDownList("BizCutOff", ViewBag.BizCutOffeName as List<SelectListItem>)
                </td>
            </tr>
            <tr>
                <td>人流量:
                </td>
                <td>@Html.DropDownList("Flows", ViewBag.FlowsName as List<SelectListItem>)
                </td>
                <td>开业日期:
                </td>
                <td>
                    @Html.TextBox("OpenDate", null, new { @style = "width:137px;" })
                    ~ @Html.TextBox("OpenDateEnd", null, new { @style = "width:137px;" })
                </td>
            </tr>
            <tr>
                <td colspan="6">
                    <a class="btn blue" title='添加商业楼栋' href="@Url.Action("Create", new { projectId = ViewBag.projectId })">
                        <i class="icon-plus icon-white"></i>新增
                    </a>
                    <a class="btn red" id="delete" href="javascript:;">
                        <i class="icon-trash icon-white"></i>删除
                    </a>
                    <button id="btnRetrive" class="btn">
                        查 询 <i class="icon-search"></i>
                    </button>
                    <a id="btnImport" title="Excel导入" class = "btn" href="@Url.Action("UploadFile")">导 入</a>
                    <button class="btn" id="btnExport" >导 出</button>
                </td>
                
            </tr>
        </table>
        <input type="hidden" value="@ViewBag.projectId" id="ProjectId" name="ProjectId" />
    }
    @* <div class="span8">
        @using (Html.BeginForm(null, null, null, FormMethod.Get, new { id = "search" }))
        { 
            <div class="dataTables_filter">
                <label>
                    <button type="submit" class="btn">
                        搜索 <i class="icon-search"></i>
                    </button>
                </label>
                <label>
                    <span>商圈名称：</span>
                    @Html.TextBox("SubAreaName", Request["SubAreaName"], new { @class = "m-wrap small" })
                </label>
            </div>
        }
    </div>*@
</div>
<div class="scrollBar">
    <table class="table table-striped table-hover ">
        <thead>
            <tr>
                <th style="width: 8px;">
                    <input type="checkbox" id="checkall" class="group-checkable" />
                </th>
                <th>楼栋名称
                </th>
                <th>楼栋商业类型
                </th>
                <th>临路类型
                </th>
                <th>商业阻隔
                </th>
                <th>人流量
                </th>
                <th>租售方式
                </th>
                <th>
                    楼层数量
                </th>
                <th>开业日期
                </th>
                <th>
                    操作
                </th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null)
            {
                foreach (var m in Model)
                {
                    var chValue = m.FxtCompanyId + "#" + m.BuildingId;
                <tr>
                    <td>
                        <input type="checkbox" class="checkboxes" name='ids' value='@chValue' />
                    </td>
                    <td>
                        <a href="@Url.Action("EditBuild", new { id = chValue })">@m.BuildingName</a>
                    </td>
                    <td>
                        @BuildingBizTypeName(m.BuildingBizType)
                    </td>
                    <td>
                        @ProRoadName(m.ProRoad)
                    </td>
                    <td>
                        @BizCutOffName(m.BizCutOff)
                    </td>
                    <td>
                        @FlowsName(m.Flows)
                    </td>
                    <td>
                        @RentSaleTypeName(m.RentSaleType)
                    </td>
                    <td>
                     @*   <a class="btn mini btn-xs blue" target="_blank" href="@Url.Action("Index", "BusinessFloor", new { ProjectId = m.ProjectId,BuildingId=m.BuildingId })"><i class="icon-share"></i>
                            @Html.Action("GetFloorCount", "BusinessBuild", new {m.ProjectId,m.BuildingId })
                        </a>*@
                        <a class="btn mini btn-xs blue" onclick ="javascript:view(this,'@m.ProjectId','@m.BuildingId');"><i class=" icon-eye-open"></i> 查看 </a>
                    </td>
                    <td>
                        @(m.OpenDate==null?"":Convert.ToDateTime(m.OpenDate).ToString("yyyy-MM-dd"))
                    </td>
                    <td>
                     <a  class="btn mini purple" title='编辑商业楼栋' href="@Url.Action("EditBuild", new { id = chValue })"><i class="icon-edit"></i>编 辑</a>
                </td>
                </tr>
                }
            }
        </tbody>
    </table>
</div>
<div class="pager">
    @{
        var totalPageCount = Model == null ? 0 : Model.TotalPageCount;
        var totalItemCount = Model == null ? 0 : Model.TotalItemCount;
        var currentPageIndex = Model == null ? 0 : Model.CurrentPageIndex;
    }
    <div>共 @totalPageCount 页 @totalItemCount 条记录,当前为第 @currentPageIndex 页</div>
    @if (Model != null && Model.Any())
    {
        @Html.Pager(Model, new PagerOptions { AutoHide = false, ShowPageIndexBox = true, PageIndexBoxType = PageIndexBoxType.TextBox })
    }

</div>
@helper BuildingBizTypeName(int buildingBizType)
{
    switch (buildingBizType)
    {
        case 1118001:
            WriteLiteral("裙楼底商");
            break;
        case 1118002:
            WriteLiteral("专业市场");
            break;
        case 1118003:
            WriteLiteral("综合市场");
            break;
        case 1118004:
            WriteLiteral("购物中心");
            break;
        case 1118005:
            WriteLiteral("百货商场");
            break;
        case 1118006:
            WriteLiteral("宾馆酒店");
            break;
        case 1118007:
            WriteLiteral("大型超市");
            break;
        case 1118008:
            WriteLiteral("地下商场");
            break;
        case 1118009:
            WriteLiteral("餐饮");
            break;
        case 1118010:
            WriteLiteral("批发市场");
            break;
        case 1118011:
            WriteLiteral("其他");
            break;
        default:
            WriteLiteral("");
            break;
    }
}
@helper ProRoadName(int proRoad)
{
    switch (proRoad)
    {
        case 1152001:
            WriteLiteral("生活性主干道");
            break;
        case 1152002:
            WriteLiteral("次干道");
            break;
        case 1152003:
            WriteLiteral("混合型主干道");
            break;
        case 1152004:
            WriteLiteral("交通性主干道");
            break;
        case 1152005:
            WriteLiteral("小区道路");
            break;
        default:
            WriteLiteral("");
            break;
    }
}
@helper BizCutOffName(int bizCutOff)
{
    switch (bizCutOff)
    {
        case 1153001:
            WriteLiteral("无");
            break;
        case 1153002:
            WriteLiteral("绿化带阻隔");
            break;
        case 1153003:
            WriteLiteral("交通设施阻隔");
            break;
        case 1153004:
            WriteLiteral("与路面不齐平");
            break;
        default:
            WriteLiteral("");
            break;
    }
}
@helper FlowsName(int flows)
{
    switch (flows)
    {
        case 1157001:
            WriteLiteral("大");
            break;
        case 1157002:
            WriteLiteral("较大");
            break;
        case 1157003:
            WriteLiteral("一般");
            break;
        case 1157004:
            WriteLiteral("小");
            break;
        case 1157005:
            WriteLiteral("较小");
            break;
        default:
            WriteLiteral("");
            break;
    }
}
@helper RentSaleTypeName(int? rentSaleTypeName)
{
    switch (rentSaleTypeName)
    {
        case 1127001:
            WriteLiteral("只租不售");
            break;
        case 1127002:
            WriteLiteral("只售不租");
            break;
        case 1127003:
            WriteLiteral("租售混合");
            break;
        default:
            WriteLiteral("");
            break;
    }
}