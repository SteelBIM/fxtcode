@model FXT.DataCenter.Domain.Models.Dat_Building_Biz
@{
    ViewBag.Title = "编辑商业楼栋";
}
@section StyleSheet{

    <style type="text/css">
        #tbInputCon {
            margin-top: 10px;
            margin-left: 30px;
            width: 95%;
            font-size: 14px;
            font-weight: normal;
            line-height: 20px;
            font-family: "Microsoft Yahei", "微软雅黑", "宋体", "Simsun", "Open Sans";
        }

        .ui-multiselect {
            height: 35px;
        }

        input.hasDatepicker {
            width: 205px;
        }

        .required {
            color: red;
        }

        .xubox_layer {
            top: 50px!important;
        }
    </style>
}
@section Javascript{
    <!--//百度地图的文件-->
    <script src="@Url.Content("~/Content/Scripts/cityBind/city.js")" type="text/javascript"></script>
    <script type="text/javascript" src="http://api.map.baidu.com/api?v=1.4"></script>
    <script src="@Url.Content("~/Content/layer-v1.7.1/layer/layer.min.js")" type="text/javascript"></script>
    <script type="text/javascript">
        $(function () {
            var locationHref = window.location.href;
            if (locationHref.indexOf("Business/BusinessBuild/EditBuild")) {
                $("#navigation .breadcrumb li:eq(1)").remove();
                $("#navigation .breadcrumb li:eq(2)").remove();
                var html = "<li><span><a href=\"/Business/BusinessStreet/Index\">商业街</a></span><i class=\"icon-angle-right\"></i></li>";
                html += " <li><span><a href='@Url.Action("Index", new { ProjectId = ViewBag.projectId })'>商业楼栋</a></span> <i class=\"icon-angle-right\"></i></li>";
                html += "<li><span>楼栋编辑</span></li>";
                $("ul.breadcrumb").append(html);
            }

            //日期控件渲染
            $("#OpenDate,#EndDate").datepicker({ format: 'yyyy-mm-dd' });

            //提交
            $("#btnsubmit").click(function () {
                $("form").submit();

            });
            //楼栋复制
            $("#btnBuildCopy").click(function () {
                $(this).tb_windowAddFooter({
                    sender1: "sender1", //第一个按钮的ID
                    name1: "确 定", //第一个按钮的名称
                    sender2: "sender2", //第二个按钮的ID
                    name2: "取 消", //第二个按钮的名称
                    sen1func: function () { //第一个按钮的功能函数
                        var bName = $.trim($("#BuildingName").val()), buildId = $("#BuildingId").val(),
                            bNameTo = $.trim($("#BuildNameTo").val()), projectId = $("#ProjectId").val();
                        if (bNameTo == null || bNameTo == "") {
                            layer.alert("目标楼栋不能为空");
                            return false;
                        }
                        if (bNameTo == bName) {
                            layer.alert("原始楼栋不能和目标楼栋一致");
                            return false;
                        }
                        $.ajax({
                            type: "POST", dataType: "Json", cache: false, url: "/Business/BusinessBuild/BuildCopy", data: { projectId: projectId, buildId: buildId, buildNameTo: bNameTo }, success: function (json) {
                                if (json == null || json == "") {
                                    //layer.alert("复制成功", 1, "复制楼栋");
                                    window.location.href = "/Business/BusinessBuild/Index?ProjectId=" + projectId + "&isExternalRequest=True";
                                } else {
                                    layer.alert(json, 0, "复制楼栋");
                                }
                                top.tb_remove();
                            }, error: function (json) {
                                layer.alert("网络异常");
                            }
                        });
                    }
                });
            });
            var aId = "@Model.AreaId", subaId = "@Model.SubAreaId";
            if (aId != 0) {
                var areaListUrl = "@Url.Action("GetSubAreaList")";
                $.post(areaListUrl, { areaId: aId }, function (json) {
                    var html = "<option value='-1'>--请选择--</option>";
                    if (json.flag) {
                        for (var i = 0; i < json.data.length; i++) {
                            if (json.data[i].SubAreaId == subaId) {
                                html += "<option value='" + json.data[i].SubAreaId + "' selected='selected'>"
                                html += json.data[i].SubAreaName;
                                html += "</option>";
                            } else {
                                html += "<option value='" + json.data[i].SubAreaId + "'>"
                                html += json.data[i].SubAreaName;
                                html += "</option>";
                            }
                        }
                    }
                    $("#SubAreaId").empty().append(html);
                }, "json");
            }
            $("#AreaId").change(function () {
                var areaId = $(this).find("option:selected").val();
                var areaListUrl = "@Url.Action("GetSubAreaList")";
                $.post(areaListUrl, { areaId: areaId }, function (json) {
                    var html = "<option value='-1'>--请选择--</option>";
                    if (json.flag) {
                        for (var i = 0; i < json.data.length; i++) {
                            html += "<option value='" + json.data[i].SubAreaId + "'>"
                            html += json.data[i].SubAreaName;
                            html += "</option>";
                        }
                    }
                    $("#SubAreaId").empty().append(html);
                }, "json");
            });

            //加载百度地图
            initBaiduMap();
            $("#BizFloor").change(function () {
                var floor = $(this).val();
                if (isNaN(floor)) {
                    layer.alert("总层数必须是正整数");
                    return false;
                }
                initBaidBuildType(floor);
            });
        });
        //输入总楼层绑定建筑类型
        function initBaidBuildType(floor) {
            var buildingtype = [{ typecode: "2003001", typename: "低层" }, { typecode: "2003002", typename: "多层" },
                                   { typecode: "2003003", typename: "小高层" }, { typecode: "2003004", typename: "高层" }]
            var strhtml = "<option value=\"-1\">--请选择--</option>";
            if (floor > 13) {
                for (var i = 0; i < buildingtype.length; i++) {
                    if (i == buildingtype.length - 1) {
                        strhtml += "<option value=\"" + buildingtype[i].typecode + "\" selected=\"selected\">";
                        strhtml += buildingtype[i].typename;
                        strhtml += "</option>";
                    } else {
                        strhtml += "<option value=\"" + buildingtype[i].typecode + "\">";
                        strhtml += buildingtype[i].typename;
                        strhtml += "</option>";
                    }

                }
            } else if (floor > 8) {
                for (var i = 0; i < buildingtype.length; i++) {
                    if (i == buildingtype.length - 2) {
                        strhtml += "<option value=\"" + buildingtype[i].typecode + "\" selected=\"selected\">";
                        strhtml += buildingtype[i].typename;
                        strhtml += "</option>";
                    } else {
                        strhtml += "<option value=\"" + buildingtype[i].typecode + "\">";
                        strhtml += buildingtype[i].typename;
                        strhtml += "</option>";
                    }

                }
            } else if (floor > 4) {
                for (var i = 0; i < buildingtype.length; i++) {
                    if (i == buildingtype.length - 3) {
                        strhtml += "<option value=\"" + buildingtype[i].typecode + "\" selected=\"selected\">";
                        strhtml += buildingtype[i].typename;
                        strhtml += "</option>";
                    } else {
                        strhtml += "<option value=\"" + buildingtype[i].typecode + "\">";
                        strhtml += buildingtype[i].typename;
                        strhtml += "</option>";
                    }

                }
            } else {
                for (var i = 0; i < buildingtype.length; i++) {
                    if (i == buildingtype.length - 4) {
                        strhtml += "<option value=\"" + buildingtype[i].typecode + "\" selected=\"selected\">";
                        strhtml += buildingtype[i].typename;
                        strhtml += "</option>";
                    } else {
                        strhtml += "<option value=\"" + buildingtype[i].typecode + "\">";
                        strhtml += buildingtype[i].typename;
                        strhtml += "</option>";
                    }

                }
            }
            $("#BuildingTypeCode").empty().append(strhtml);
        }
        function initBaiduMap() {

            var cityX = "@ViewBag.CityX";
            var cityY = "@ViewBag.CityY";

            var lay, //弹出层
                map, //地图对象
                initLngAndLat = [{ Lng: cityX, Lat: cityY }], //初始化经纬度、默认深圳
                clickLngAndLat = []; //保存坐标的数组
            var currentCity = "深圳";

            //坐标拾取
            $("#GetCoordinate").click(function () {

                lay = $.layer({
                    type: 1,
                    title: false,
                    closeBtn: false,
                    //closeBtn: [1, true],//控制层右上角关闭按钮。closeBtn的值分别为: [关闭按钮的风格（支持0和1）, true]若不想显示关闭按钮，配置 closeBtn: false即可
                    border: [5, 0.5, '#666', true],
                    offset: ['0px', ''],
                    move: ['.xubox_title', false],
                    area: ['860px', '500px'],
                    page: {
                        dom: "#baidumap"
                    },
                    success: function () {
                        layer.shift('top', 500);
                    }
                    //, close: function (index) {//层右上角关闭按钮的点击事件触发回调函数。
                    //    ClikcLng_Lat = [];
                    //    map.clearOverlays();
                    //    layer.close(index);

                    //}
                });


                var x = $.trim($("#X").val());
                var y = $.trim($("#Y").val());
                if (x != null && x != "" && y != null && y != "") {
                    clickLngAndLat.push({ Lng: x, Lat: y });
                }

                map = new BMap.Map("container");//加载地图
                map.clearOverlays(); //清除标注
                // 添加带有定位的导航控件
                var navigationControl = new BMap.NavigationControl({
                    // 靠左上角位置
                    anchor: BMAP_ANCHOR_TOP_LEFT,
                    // LARGE类型
                    type: BMAP_NAVIGATION_CONTROL_LARGE
                });
                map.addControl(navigationControl);
                map.addControl(new BMap.MapTypeControl());   //添加地图类型控件
                var point;
                if (clickLngAndLat.length > 0) {  //如果是编辑状态，则加载已有坐标。否，加载默认坐标
                    point = new BMap.Point(clickLngAndLat[0].Lng, clickLngAndLat[0].Lat);
                } else {
                    point = new BMap.Point(initLngAndLat[0].Lng, initLngAndLat[0].Lat);
                }

                var marker = new BMap.Marker(point); // 创建标注
                map.addOverlay(marker); // 将标注添加到地图中
                map.centerAndZoom(point, 15);
                map.setCurrentCity(currentCity);
                map.enableScrollWheelZoom();

                map.addEventListener("click", function (e) {
                    map.setDefaultCursor("pointer"); //设置鼠标手势
                    clickLngAndLat = [];
                    map.clearOverlays(); //清除除标注
                    var jsonStr = { Lng: e.point.lng, Lat: e.point.lat };
                    clickLngAndLat.push(jsonStr);
                    point = new BMap.Point(clickLngAndLat[0].Lng, clickLngAndLat[0].Lat);
                    //map.centerAndZoom(point, 18);
                    //map.enableScrollWheelZoom();
                    //$("#txtlatitude").val("").val(e.point.lat);
                    //$("#txtlongitude").val("").val(e.point.lng);
                    var marker = new BMap.Marker(point); // 创建标注
                    map.addOverlay(marker); // 将标注添加到地图中
                    //marker.setAnimation(BMAP_ANIMATION_BOUNCE); //跳动的动画

                });

                if (clickLngAndLat.length > 0) {
                    //$("#txtlatitude").val("").val(clickLngAndLat[0].Lat);
                    //$("#txtlongitude").val("").val(clickLngAndLat[0].Lng);
                }

            });

            //坐标拾取--确定
            $("#btn_xy").click(function () {
                if (clickLngAndLat != null && clickLngAndLat.length > 0) {
                    $("#X").val("").val(clickLngAndLat[0].Lng);
                    $("#Y").val("").val(clickLngAndLat[0].Lat);
                    map.clearOverlays();
                }
                layer.close(lay);
            });

            //坐标拾取--取消
            $("#btnClrearCallout").click(function () {
                clickLngAndLat = [];
                map.clearOverlays();
                layer.close(lay);
            });

            //搜索
            $("#areaSearch").click(function () {
                // 创建地址解析器实例 
                var myGeo = new BMap.Geocoder();
                var searchTxt = $("#txtarea").val();
                if ($.trim(searchTxt) == null || $.trim(searchTxt) == "") {
                    layer.alert("请输入搜索条件");
                    return false;
                }
                // 将地址解析结果显示在地图上，并调整地图视野 
                myGeo.getPoint(searchTxt, function (point) {
                    if (point) {
                        map.clearOverlays();
                        map.centerAndZoom(point, 15);
                        //$("#txtlatitude").val('').val(point.lat);
                        //$("#txtlongitude").val('').val(point.lng);
                        //var pointMarker = new BMap.Point(point.lng, point.lat);
                        //map.addOverlay(new BMap.Marker(point));
                        clickLngAndLat = [];
                        var json_str = { Lng: point.lng, Lat: point.lat };
                        clickLngAndLat.push(json_str);
                        var point = new BMap.Point(point.lng, point.lat); // 创建标注的坐标
                        var marker = new BMap.Marker(point);  // 创建标注
                        map.addOverlay(marker);
                        map.setCurrentCity(searchTxt);
                    } else
                        layer.alert("搜索不到结果");
                }, "全国");
            });
        }
    </script>
}
@using (Html.BeginForm())
{
    <table id="tbInputCon" class="tbInputCon">
        <tr>
            <td><span class="required">*</span>楼栋名称:
            </td>
            <td>
                @Html.TextBoxFor(m => m.BuildingName)
                @Html.ValidationMessageFor(m => m.BuildingName)
            </td>
            <td><span class="required">*</span>楼栋商业类型:
            </td>
            <td>
                @Html.DropDownListFor(m => m.BuildingBizType, (ViewBag.BuildingBizTypeName) as List<SelectListItem>)
                @Html.ValidationMessageFor(m => m.BuildingBizType)
            </td>
        </tr>
        <tr>
            <td><span class="required">*</span>临路类型:
            </td>
            <td>
                @Html.DropDownListFor(m => m.ProRoad, (ViewBag.ProRoadName) as List<SelectListItem>)
                @Html.ValidationMessageFor(m => m.ProRoad)
            </td>
            <td><span class="required">*</span>人流量:
            </td>
            <td>
                @Html.DropDownListFor(m => m.Flows, (ViewBag.FlowsName) as List<SelectListItem>)
                @Html.ValidationMessageFor(m => m.Flows)
            </td>
        </tr>
        <tr>
            <td><span class="required">*</span>商业阻隔:
            </td>
            <td>
                @Html.DropDownListFor(m => m.BizCutOff, (ViewBag.BizCutOffeName) as List<SelectListItem>)
                @Html.ValidationMessageFor(m => m.BizCutOff)
            </td>
            <td><span class="required">*</span>是否商业标杆:
            </td>
            <td>
                @Html.DropDownListFor(m => m.IsBenchmarks, new List<SelectListItem> { 
                    new SelectListItem{Value="-1",Text="--请选择--"},
                    new SelectListItem{Value="0",Text="否"},
                    new SelectListItem{Value="1",Text="是"}
                })
                @Html.ValidationMessageFor(m => m.IsBenchmarks)
            </td>
        </tr>
        <tr>
            <td>地址:
            </td>
            <td>
                @Html.TextAreaFor(m => m.Address, new { cols = "20", rows = "2", style = "margin-bottom: 5px; width: 217px; height: 68px;" })
            </td>
            <td>宗地号：
            </td>
            <td>
                @Html.TextBoxFor(m => m.FieldNo)
            </td>
        </tr>
        <tr>
            <td>与商圈的关联度:
            </td>
            <td>
                @Html.DropDownListFor(m => m.CorrelationType, (ViewBag.CorrelationTypeName) as List<SelectListItem>)
            </td>
            <td>建筑结构:
            </td>
            <td>
                @Html.DropDownListFor(m => m.StructureCode, (ViewBag.StructureName) as List<SelectListItem>)
            </td>
        </tr>
        <tr>
            <td>商铺总数:
            </td>
            <td>
                @Html.TextBoxFor(m => m.BizNum)
                @Html.ValidationMessageFor(m => m.BizNum)
            </td>
            <td>管理费:
            </td>
            <td>
                @Html.TextBoxFor(m => m.ManagerPrice)
            </td>
        </tr>
        <tr>
            <td>管理处电话:
            </td>
            <td>
                @Html.TextBoxFor(m => m.ManagerTel)
            </td>
            <td>总建筑面积:
            </td>
            <td>
                @Html.TextBoxFor(m => m.BuildingArea)
                @Html.ValidationMessageFor(m => m.BuildingArea)
            </td>
        </tr>
        <tr>
            <td>竣工日期:
            </td>
            <td>
                @Html.TextBoxFor(m => m.EndDate, new { Value = Model.EndDate == null ? "" : Model.EndDate.Value.ToString("yyyy-MM-dd") })
            </td>
            <td>开业日期:
            </td>
            <td>
                @Html.TextBoxFor(m => m.OpenDate, new { Value = Model.OpenDate == null ? "" : Model.OpenDate.Value.ToString("yyyy-MM-dd") })
            </td>
        </tr>
        <tr>
            <td>租售方式:
            </td>
            <td>
                @Html.DropDownListFor(m => m.RentSaleType, (ViewBag.RentSaleTypeName) as List<SelectListItem>)
            </td>
            <td>商业总面积:
            </td>
            <td>
                @Html.TextBoxFor(m => m.BizArea)
                @Html.ValidationMessageFor(m => m.BizArea)
            </td>
        </tr>
        <tr>
            <td>X坐标:
            </td>
            <td>@Html.TextBoxFor(m => m.X, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.X)
            </td>
            <td>Y坐标:
            </td>
            <td>
                @Html.TextBoxFor(m => m.Y, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(m => m.Y)
                <a href="javascript:void(0)" id="GetCoordinate">拾取坐标</a>
                @*<a href="javascript:void(0)" id="MapCallout" >地图标注</a>
                <input type="hidden" id="LngOrLat" name="LngOrLat" value="@Model.LngOrLat" />*@
                <input type="hidden" id="CreateTime" name="CreateTime" value="@Model.CreateTime" />
                <input type="hidden" id="BuildingId" name="BuildingId" value="@Model.BuildingId" />
                <input type="hidden" id="ProjectId" name="ProjectId" value="@ViewBag.projectId" />
                <input type="hidden" id="FxtCompanyId" name="FxtCompanyId" value="@(Model == null ? 0 : Model.FxtCompanyId)" />
            </td>
        </tr>
        <tr>
            <td>地上商业层数:
            </td>
            <td>
                @Html.TextBoxFor(m => m.UpFloorNum)
                @Html.ValidationMessageFor(m => m.UpFloorNum)
            </td>
            <td>地下商业层数:
            </td>
            <td>
                @Html.TextBoxFor(m => m.DownFloorNum)
                @Html.ValidationMessageFor(m => m.DownFloorNum)
            </td>
        </tr>
        <tr>
            <td>商业总层数
            </td>
            <td>
                @Html.TextBoxFor(m => m.BizFloor)
                @Html.ValidationMessageFor(m => m.BizFloor)
            </td>
            <td>建筑类型:
            </td>
            <td>
                @Html.DropDownListFor(m => m.BuildingTypeCode, (ViewBag.BuildingTypeName) as List<SelectListItem>)
            </td>
        </tr>
        <tr>
            <td>客梯数量:
            </td>
            <td>
                @Html.TextBoxFor(m => m.LiftNum)
                @Html.ValidationMessageFor(m => m.LiftNum)
            </td>
            <td>客梯装修:
            </td>
            <td>
                @Html.DropDownListFor(m => m.LiftFitment, (ViewBag.LiftFitmentName) as List<SelectListItem>)
            </td>
        </tr>
        <tr>
            <td>电梯品牌:
            </td>
            <td>
                @Html.TextBoxFor(m => m.LiftBrand)
            </td>
            <td>扶手电梯数量:
            </td>
            <td>
                @Html.TextBoxFor(m => m.EscalatorsNum)
                @Html.ValidationMessageFor(m => m.EscalatorsNum)
            </td>
        </tr>
        <tr>
            <td>扶手电梯品牌:
            </td>
            <td>
                @Html.TextBoxFor(m => m.EscalatorsBrand)
            </td>
            <td>卫浴品牌:
            </td>
            <td>
                @Html.TextBoxFor(m => m.ToiletBrand)
            </td>
        </tr>
        <tr>
            <td>公共区域装修:
            </td>
            <td>
                @Html.DropDownListFor(m => m.PublicFitment, (ViewBag.PublicFitmentName) as List<SelectListItem>)
            </td>
            <td>外墙装修:
            </td>
            <td>
                @Html.DropDownListFor(m => m.WallFitment, (ViewBag.WallFitmentName) as List<SelectListItem>)
            </td>
        </tr>
        <tr>
            <td>交通便捷度:
            </td>
            <td>
                @Html.DropDownListFor(m => m.TrafficType, (ViewBag.TrafficTypeName) as List<SelectListItem>)
            </td>
            <td>停车便捷度:
            </td>
            <td>
                @Html.DropDownListFor(m => m.ParkingLevel, (ViewBag.ParkingLevelName) as List<SelectListItem>)
            </td>
        </tr>
        <tr>
            <td>空调系统类型:
            </td>
            <td>
                @Html.DropDownListFor(m => m.AirConditionType, (ViewBag.AirConditionTypeName) as List<SelectListItem>)
            </td>
            <td>功能分布:
            </td>
            <td>
                @Html.TextBoxFor(m => m.Functional, new { title = "功能分布：裙楼、塔楼、地下室" })
            </td>
        </tr>
        <tr>
            <td>四至东:
            </td>
            <td>
                @Html.TextBoxFor(m => m.East)
            </td>
            <td>四至南:
            </td>
            <td>
                @Html.TextBoxFor(m => m.south)
            </td>
        </tr>
        <tr>
            <td>四至西:
            </td>
            <td>
                @Html.TextBoxFor(m => m.west)
            </td>
            <td>四至北:
            </td>
            <td>
                @Html.TextBoxFor(m => m.north)
            </td>
        </tr>
        <tr>
            <td>主营商业种类:
            </td>
            <td>
                @Html.DropDownListFor(m => m.BizType, (ViewBag.BizTypeName) as List<SelectListItem>)
            </td>
            <td>客户消费定位:
            </td>
            <td>
                @Html.DropDownListFor(m => m.CustomerType, (ViewBag.CustomerTypeName) as List<SelectListItem>)
            </td>
        </tr>
        <tr>
            <td>营业时间:
            </td>
            <td>
                @Html.TextBoxFor(m => m.BusinessHours)
            </td>
            <td>楼栋均价:</td>
            <td>
                @Html.TextBoxFor(m => m.AveragePrice)
                @Html.ValidationMessageFor(m => m.AveragePrice)
            </td>
        </tr>
        <tr>
            <td>价格系数</td>
            <td>@Html.TextBoxFor(m => m.Weight)@Html.ValidationMessageFor(m => m.Weight)</td>
        </tr>
        <tr>
            <td>商业描述：
            </td>
            <td colspan="3">
                @Html.TextAreaFor(m => m.Details, new { cols = "20", rows = "2", style = "margin-bottom: 5px; width: 535px; height: 68px;" })
            </td>

        </tr>
        <tr>
            <td>交通便捷度描述:</td>
            <td colspan="3">
                @Html.TextAreaFor(m => m.TrafficDetails, new { cols = "20", rows = "2", style = "margin-bottom: 5px; width: 535px; height: 68px;" })
            </td>
        </tr>
        <tr>
            <td>备注:</td>
            <td colspan="3">
                @Html.TextAreaFor(m => m.Remarks, new { cols = "20", rows = "2", style = "margin-bottom: 5px; width: 535px; height: 68px;" })
            </td>
        </tr>
        <tr>
            <td colspan="4" style="padding: 15px 0px;">
                <button class="btn blue" type="button" id="btnsubmit">
                    <i class="icon-ok"></i>确定
                </button>
                @if (Model != null && Model.BuildingId > 0)
                {
                    <a class="btn" title='楼栋图片'  href="@Url.Action("BuildPhoto", new { projectId = ViewBag.projectId, buildingId = Model.BuildingId })">
                        <i class="icon-picture"></i>楼栋图片 </a> 
                    <input type="button" title="楼栋复制" id="btnBuildCopy" class="btn thickbox" alt="#TB_inline?height=250&width=350&inlineId=BuildCopy" value="楼栋复制" />
                    
                    <a class="btn" title='楼层' href="@Url.Action("Index", "BusinessFloor", new { projectId = ViewBag.projectId, buildingId = Model.BuildingId })">
                        <i class="icon-share-alt"></i>楼层 </a> 
                     
                }
            </td>
        </tr>
    </table>
}

<div id="baidumap" style="display: none;">
    <div style="width: 100%">
        <div style="margin-top: 10px; margin-left: 20px; float: left; width: 100%">
            城市或地名:
            <input id="txtarea" type="text" style="width: 100px; margin-right: 10px;" /><a href="javascript:void(0)" class="btn" id="areaSearch">点击搜索</a>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <a href="javascript:void(0)" id="btn_xy" class="GetCoordinate btn">确定</a>
            <a href="javascript:void(0)" id="btnClrearCallout" class="GetCoordinate btn">取消</a>
        </div>
    </div>
    <div style="width: 860px; height: 450px; border: 1px solid gray; text-align: center;" id="container">
    </div>
</div>
<div id="BuildCopy" style="display: none;">
    <table style="width: 100%; margin-bottom: 10px; line-height: 35px; margin-top: 10px;">
        <tr>
            <td>从:
            </td>
            <td>
                @Html.TextBoxFor(m => m.BuildingName, new { @readonly = "readonly", style = "width:205px" })
            </td>
        </tr>
        <tr>
            <td>复制到:
            </td>
            <td>
                @Html.TextBox("BuildNameTo")
            </td>
        </tr>
    </table>
</div>
