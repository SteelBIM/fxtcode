@using FXT.DataCenter.Domain.Models
@using FXT.DataCenter.WebUI.Infrastructure.WebSecurity
@model DAT_Case
@{
    Layout = "~/Views/Shared/_Layout.Edit.cshtml";
}
@section PageSpecificStyleSheetIncludes{
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/Scripts/autocomplete/jquery.autocomplete.css")" />
    <style type="text/css">
        .tbInputCon {
            margin-top: 10px;
            margin-left: 30px;
            width: 95%;
            font-size: 14px;
            font-weight: normal;
            line-height: 20px;
            font-family: "Microsoft Yahei", "微软雅黑", "宋体", "Simsun", "Open Sans";
        }

        .ui-multiselect {
            height: 35px;
        }

        input.hasDatepicker {
            width: 205px;
        }

        .hidden {
            display: none;
        }
    </style>
}
@section PageSpecificJavascriptIncludes{
    <script src="@Url.Content("~/Content/Scripts/autocomplete/jquery.autocomplete.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/layer-v1.7.1/layer/layer.min.js")" type="text/javascript"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            //日期控件渲染
            $("#casedate").datepicker({
                format: "yyyy-mm-dd",
            });

            $("#areaid").change(function () {
                $("#areaname").val("");
                $("#areaname").val($('#areaid').find('option:selected').text());
            });

            @*  $('#ProjectName').autocomplete('@Url.Action("ProjectSelect")', {
                max: 12,    //列表里的条目数
                minChars: 0,    //自动完成激活之前填入的最小字符
                width: 218,     //提示的宽度，溢出隐藏
                scrollHeight: 300,   //提示的高度，溢出显示滚动条
                matchContains: true,    //包含匹配，就是data参数里的数据，是否只要包含文本框里的数据就显示
                autoFill: false,    //自动填充
                parse: function (data) {
                    return $.map(eval(data), function (row) {
                        return {
                            data: row,
                            value: row.name,//显示结果
                            result: row.id  //填充结果
                        }
                    });
                },
                formatItem: function (row, i, max) {
                    return row.name;
                },
                formatMatch: function (row, i, max) {
                    return row.name;
                },
                formatResult: function (row) {
                    return row.name;
                }
            }).result(function (event, row, formatted) {
                var projectname = row.name.split('|')[0];
                $('#ProjectName').val(projectname);
                $("#projectid").val(row.id);
                //给行政区名称赋初值
                $("#areaname").val($("#areaid option:selected").text());
            });*@

            $("#projectid").select2({
                minimumInputLength: 2,
                ajax: {
                    url: "@Url.Action("ProjectSelect")",
                    dataType: 'json',
                    data: function (term, page) {
                        return {
                            key: term
                        };
                    },
                    results: function (data, page) {
                        return { results: data };
                    }
                },
                formatResult: function (data) {
                    return data.text;
                },
                formatSelection: function (data) {
                    return data.text;
                },
            });
            $(".select2-container").width(221); //重置select2宽度

            $("#projectid").select2("val", { id: '@ViewBag.select2ProjectId', text: '@ViewBag.select2ProjectName' });

            $("#buildingarea").bind("change", function () {
                var unitprice = $.trim($("#unitprice").val());
                var buildingarea = $.trim($(this).val());
                if (buildingarea <= 0) {
                    alert("建筑面积不能小于等于0");
                    $(this).val(1);
                }
                buildingarea = $.trim($(this).val());
                $(this).val(((Number)(buildingarea)).toFixed(2));
                buildingarea = $.trim($(this).val());

                if (buildingarea != "" && unitprice != "") {
                    var totalPrice = (Number)(unitprice) * (Number)(buildingarea);
                    $("#totalprice").val(totalPrice.toFixed(2));
                } else {
                    $("#totalprice").val("");
                }
            });

            $("#unitprice").bind("change", function () {
                var buildingarea = $.trim($("#buildingarea").val());
                var unitprice = $.trim($(this).val());
                if (unitprice <= 0) {
                    alert("单价不能小于等于0");
                    $(this).val(1);
                }
                unitprice = $.trim($(this).val());
                $(this).val(((Number)(unitprice)).toFixed(2));
                unitprice = $.trim($(this).val());

                if (buildingarea != "" && unitprice != "") {
                    var totalPrice = (Number)(unitprice) * (Number)(buildingarea);
                    $("#totalprice").val(totalPrice.toFixed(2));
                } else {
                    $("#totalprice").val("");
                }

            });

            $("#btnSubmit").unbind();
            $("#btnSubmit").on("click", function () {
                var companyId = $("#fxtcompanyid").val();
                if (companyId > 0 && companyId != '@Passport.Current.FxtCompanyId') {
                    alert("对不起，该条数据您没有修改权限！");
                    return false;
                }

            });

        });
    </script>
}
@section MainContent{
    <table class="tbInputCon">
        <tr>
            <td>楼盘名称:
            </td>
            <td>
                @Html.HiddenFor(m => m.caseid)
                @*@Html.TextBoxFor(m => m.ProjectName)*@
                @*<input type="hidden" id="projectid" name = "projectid" />*@
                @Html.HiddenFor(m => m.projectid) <font style="color: Red">*</font>
            </td>
            <td>案例时间:
            </td>
            <td>
                @Html.TextBox("casedate", (Model == null ? string.Empty : Model.casedate.ToString("yyyy-MM-dd")))
                <font style="color: Red">*</font>
            </td>
        </tr>
        <tr>
            <td>行政区:
            </td>
            <td>
                <input id="areaname" name="areaname" type="hidden" />
                @Html.DropDownListFor(m => m.areaid, ViewBag.AreaName as List<SelectListItem>)
            </td>
            <td>案例类型：
            </td>
            <td>
                @Html.DropDownListFor(m => m.casetypecode, ViewBag.CaseTypeName as List<SelectListItem>)
                <font style="color: Red">*</font>
            </td>
        </tr>
        <tr>
            <td>楼栋名称：
            </td>
            <td>
                @Html.TextBoxFor(m => m.buildingname)
            </td>
            <td>房号:
            </td>
            <td>
                @Html.TextBoxFor(m => m.houseno)
            </td>
        </tr>
        <tr>
            <td>用途:
            </td>
            <td>
                @Html.DropDownListFor(m => m.purposecode, ViewBag.PurposeName as List<SelectListItem>)
                <font style="color: Red">*</font>
            </td>
            <td>建筑面积：
            </td>
            <td>
                @Html.TextBoxFor(m => m.buildingarea)
                <font style="color: Red">*</font>
            </td>
        </tr>
        <tr>
            <td>单价（元）:
            </td>
            <td>
                @Html.TextBoxFor(m => m.unitprice)
                <font style="color: Red">*</font>
            </td>
            <td>总价（元）:
            </td>
            <td>
                @Html.TextBoxFor(m => m.totalprice, new { @readonly = "readonly" })
                <font style="color: Red">*</font>
            </td>
        </tr>
        <tr>
            <td>朝向:
            </td>
            <td>
                @Html.DropDownListFor(m => m.frontcode, ViewBag.FrontName as List<SelectListItem>)
            </td>
            <td>装修:
            </td>
            <td>
                @Html.TextBoxFor(m => m.zhuangxiu)
            </td>
        </tr>
        <tr>
            <td>楼层:
            </td>
            <td>
                @* @Html.TextBoxFor(m => m.landpurposedesc, new { @class = "m-wrap small" })*@
                @Html.TextBoxFor(m => m.floornumber)
            </td>
            <td>总楼层:
            </td>
            <td>
                @* @Html.TextBoxFor(m => m.landpurposedesc, new { @class = "m-wrap small" })*@
                @Html.TextBoxFor(m => m.totalfloor)
            </td>
        </tr>
        <tr>
            <td>户型：
            </td>
            <td>
                @Html.DropDownListFor(m => m.housetypecode, ViewBag.HouseTypeName as List<SelectListItem>)
            </td>

            <td>户型结构：
            </td>
            <td>
                @Html.DropDownListFor(m => m.structurecode, ViewBag.StructureName as List<SelectListItem>)
            </td>
        </tr>
        <tr>
            <td>建筑年代：
            </td>
            <td>
                @Html.TextBoxFor(m => m.buildingdate)
            </td>
            <td>建筑类型：</td>
            <td>@Html.DropDownListFor(m => m.buildingtypecode, ViewBag.BuildingTypeName as List<SelectListItem>)

            </td>
        </tr>
        <tr>
            <td>使用面积:
            </td>
            <td>
                @Html.TextBoxFor(m => m.usablearea)
            </td>
            <td>剩余年限:
            </td>
            <td>
                @Html.TextBoxFor(m => m.remainyear)
            </td>
        </tr>
        <tr>
            <td>成新率:
            </td>
            <td>
                @Html.TextBoxFor(m => m.depreciation)
            </td>
            <td>币种:
            </td>
            <td>
                @Html.DropDownListFor(m => m.moneyunitcode, ViewBag.MomenyUnitCode as List<SelectListItem>)
            </td>
        </tr>
        <tr>
            <td>附属房屋:
            </td>
            <td>
                @Html.TextBoxFor(m => m.subhouse)
            </td>
            <td>配套:
            </td>
            <td>
                @Html.TextBoxFor(m => m.peitao)
            </td>
        </tr>
        <tr>
            <td>电话:
            </td>
            <td>
                @Html.TextBoxFor(m => m.sourcephone)
            </td>
            <td>来源：
            </td>
            <td>
                @Html.TextBoxFor(m => m.sourcename)
            </td>
        </tr>
        <tr>
            <td>链接：
            </td>
            <td>
                @Html.TextBoxFor(m => m.sourcelink)
                @{
                    var companyId = Model == null ? 0 : Model.fxtcompanyid;
                }

                <input type="hidden" id="fxtcompanyid" name="fxtcompanyid" value="@companyId" />
            </td>
            <td>备注:
            </td>
            <td>
                @Html.TextBoxFor(m => m.remark)
            </td>
        </tr>
        <tr>
            <td>录入人：
            </td>
            <td colspan="3">
                @Html.TextBoxFor(m => m.creator, new { @readonly = true })
            </td>
        </tr>
    </table>
}
