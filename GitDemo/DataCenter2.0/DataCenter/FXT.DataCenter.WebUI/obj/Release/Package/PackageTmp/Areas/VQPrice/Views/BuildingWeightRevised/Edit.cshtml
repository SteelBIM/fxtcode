@using FXT.DataCenter.Domain.Models
@model DatWeightBuilding
@{
    Layout = "~/Views/Shared/_Layout.Edit.cshtml";
}
@section PageSpecificStyleSheetIncludes{
    <style type="text/css">
        .required
        {
            color: red;
        }
    </style>
}
@section PageSpecificJavascriptIncludes{


    <script type="text/javascript">

        $(document).ready(function () {

            //楼栋
            $("#BuildingId").select2({
                minimumInputLength: 2,
                ajax: {
                    url: "@Url.Action("BuildingSelect")",
                    dataType: 'json',
                    data: function (term, page) {
                        return {
                            key: term,
                            projectId:'@ViewBag.projectId'
                        };
                    },
                    results: function (data, page) {
                        return { results: data };
                    }
                },
                formatResult: function (data) {
                    return data.text;
                },
                formatSelection: function (data) {
                    return data.text;
                },
            });
            $(".select2-container").width(221); //重置select2宽度

            if ('@ViewBag.select2BuildingId') {

                $("#BuildingId").select2("val", { id: '@ViewBag.select2BuildingId', text: '@ViewBag.select2BuildingName' });
                $(".select2-search, .select2-focusser").remove();
            }


            @* $('#BuildingName').autocomplete('@Url.Action("BuildingSelect")', {
                max: 12,    //列表里的条目数
                minChars: 0,    //自动完成激活之前填入的最小字符
                width: 218,     //提示的宽度，溢出隐藏
                scrollHeight: 200,   //提示的高度，溢出显示滚动条
                matchContains: true,    //包含匹配，就是data参数里的数据，是否只要包含文本框里的数据就显示
                autoFill: false,    //自动填充
                parse: function (data) {
                    return $.map(eval(data), function (row) {
                        return {
                            data: row,
                            value: row.name, //显示结果
                            result: row.id  //填充结果
                        }
                    });
                },
                formatItem: function (row, i, max) {
                    return row.name;
                },
                formatMatch: function (row, i, max) {
                    return row.name;
                },
                formatResult: function (row) {
                    return row.name;
                }
            }).result(function (event, row, formatted) {
                $('#BuildingName').val(row.name);
                $("#BuildingId").val(row.id);
            });*@

        });
    </script>
}
@section MainContent{

    <div class="portlet-body form-horizontal form-bordered form-row-stripped">
        <div class="row-fluid">
            <div class="control-group">
                <label class="control-label">
                    楼栋:</label>
                <div class="controls">
                    @Html.HiddenFor(m => m.BuildingId)

                    @if (Model != null)
                    {
                        @Html.HiddenFor(m => m.Id)
                        @Html.HiddenFor(m => m.CityId)
                        @Html.HiddenFor(m => m.FxtCompanyId)
                        @Html.HiddenFor(m=>m.ProjectId)
                    }
                    else
                    {
                         <input type="hidden" name ="projectId" value="@ViewBag.projectId" />
                    }

                </div>
            </div>
            <div class="control-group">
                <label class="control-label">
                    楼栋系数：</label>
                <div class="controls">
                    @Html.TextBoxFor(m => m.Weight)
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">
                    楼栋均价(元):</label>
                <div class="controls">
                    @Html.TextBoxFor(m => m.AvgPrice)
                   
                </div>
            </div>
        </div>
    </div>
}
