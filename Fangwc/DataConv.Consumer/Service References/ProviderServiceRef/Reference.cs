//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataConv.Consumer.ProviderServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="City", Namespace="http://schemas.datacontract.org/2004/07/DataConv.Model")]
    [System.SerializableAttribute()]
    public partial class City : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, int> AreaMapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseTableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectTableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProvinceIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, int> AreaMap {
            get {
                return this.AreaMapField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaMapField, value) != true)) {
                    this.AreaMapField = value;
                    this.RaisePropertyChanged("AreaMap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseTable {
            get {
                return this.CaseTableField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseTableField, value) != true)) {
                    this.CaseTableField = value;
                    this.RaisePropertyChanged("CaseTable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityID {
            get {
                return this.CityIDField;
            }
            set {
                if ((this.CityIDField.Equals(value) != true)) {
                    this.CityIDField = value;
                    this.RaisePropertyChanged("CityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectTable {
            get {
                return this.ProjectTableField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectTableField, value) != true)) {
                    this.ProjectTableField = value;
                    this.RaisePropertyChanged("ProjectTable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProvinceId {
            get {
                return this.ProvinceIdField;
            }
            set {
                if ((this.ProvinceIdField.Equals(value) != true)) {
                    this.ProvinceIdField = value;
                    this.RaisePropertyChanged("ProvinceId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Area", Namespace="http://schemas.datacontract.org/2004/07/DataConv.Model")]
    [System.SerializableAttribute()]
    public partial class Area : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AreaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AreaId {
            get {
                return this.AreaIdField;
            }
            set {
                if ((this.AreaIdField.Equals(value) != true)) {
                    this.AreaIdField = value;
                    this.RaisePropertyChanged("AreaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaName {
            get {
                return this.AreaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaNameField, value) != true)) {
                    this.AreaNameField = value;
                    this.RaisePropertyChanged("AreaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityId {
            get {
                return this.CityIdField;
            }
            set {
                if ((this.CityIdField.Equals(value) != true)) {
                    this.CityIdField = value;
                    this.RaisePropertyChanged("CityId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SysCode", Namespace="http://schemas.datacontract.org/2004/07/DataConv.Model")]
    [System.SerializableAttribute()]
    public partial class SysCode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeName {
            get {
                return this.CodeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeNameField, value) != true)) {
                    this.CodeNameField = value;
                    this.RaisePropertyChanged("CodeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeType {
            get {
                return this.CodeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeTypeField, value) != true)) {
                    this.CodeTypeField = value;
                    this.RaisePropertyChanged("CodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubCode {
            get {
                return this.SubCodeField;
            }
            set {
                if ((this.SubCodeField.Equals(value) != true)) {
                    this.SubCodeField = value;
                    this.RaisePropertyChanged("SubCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataCase", Namespace="http://schemas.datacontract.org/2004/07/DataConv.Model")]
    [System.SerializableAttribute()]
    public partial class DataCase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AreaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> BuildingAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BuildingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildingNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BuildingTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildingTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CaseTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DepreciationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FXTCompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FitmentCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FitmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FloorNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FrontCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FrontNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HouseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HouseNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HouseTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HouseTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MoneyUnitCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MoneyUnitNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OldIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeiTaoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PurposeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurposeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RecordWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RemainYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SaveDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SaveUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SightCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourcePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StructureCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StructureNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubHouseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SurveyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalFloorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UsableAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ValidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZhuangXiuField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AreaId {
            get {
                return this.AreaIdField;
            }
            set {
                if ((this.AreaIdField.Equals(value) != true)) {
                    this.AreaIdField = value;
                    this.RaisePropertyChanged("AreaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaName {
            get {
                return this.AreaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaNameField, value) != true)) {
                    this.AreaNameField = value;
                    this.RaisePropertyChanged("AreaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> BuildingArea {
            get {
                return this.BuildingAreaField;
            }
            set {
                if ((this.BuildingAreaField.Equals(value) != true)) {
                    this.BuildingAreaField = value;
                    this.RaisePropertyChanged("BuildingArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildingDate {
            get {
                return this.BuildingDateField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildingDateField, value) != true)) {
                    this.BuildingDateField = value;
                    this.RaisePropertyChanged("BuildingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BuildingId {
            get {
                return this.BuildingIdField;
            }
            set {
                if ((this.BuildingIdField.Equals(value) != true)) {
                    this.BuildingIdField = value;
                    this.RaisePropertyChanged("BuildingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildingName {
            get {
                return this.BuildingNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildingNameField, value) != true)) {
                    this.BuildingNameField = value;
                    this.RaisePropertyChanged("BuildingName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BuildingTypeCode {
            get {
                return this.BuildingTypeCodeField;
            }
            set {
                if ((this.BuildingTypeCodeField.Equals(value) != true)) {
                    this.BuildingTypeCodeField = value;
                    this.RaisePropertyChanged("BuildingTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildingTypeName {
            get {
                return this.BuildingTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildingTypeNameField, value) != true)) {
                    this.BuildingTypeNameField = value;
                    this.RaisePropertyChanged("BuildingTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CaseDate {
            get {
                return this.CaseDateField;
            }
            set {
                if ((this.CaseDateField.Equals(value) != true)) {
                    this.CaseDateField = value;
                    this.RaisePropertyChanged("CaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CaseTypeCode {
            get {
                return this.CaseTypeCodeField;
            }
            set {
                if ((this.CaseTypeCodeField.Equals(value) != true)) {
                    this.CaseTypeCodeField = value;
                    this.RaisePropertyChanged("CaseTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseTypeName {
            get {
                return this.CaseTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseTypeNameField, value) != true)) {
                    this.CaseTypeNameField = value;
                    this.RaisePropertyChanged("CaseTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CityID {
            get {
                return this.CityIDField;
            }
            set {
                if ((this.CityIDField.Equals(value) != true)) {
                    this.CityIDField = value;
                    this.RaisePropertyChanged("CityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Depreciation {
            get {
                return this.DepreciationField;
            }
            set {
                if ((this.DepreciationField.Equals(value) != true)) {
                    this.DepreciationField = value;
                    this.RaisePropertyChanged("Depreciation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FXTCompanyId {
            get {
                return this.FXTCompanyIdField;
            }
            set {
                if ((this.FXTCompanyIdField.Equals(value) != true)) {
                    this.FXTCompanyIdField = value;
                    this.RaisePropertyChanged("FXTCompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FitmentCode {
            get {
                return this.FitmentCodeField;
            }
            set {
                if ((this.FitmentCodeField.Equals(value) != true)) {
                    this.FitmentCodeField = value;
                    this.RaisePropertyChanged("FitmentCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FitmentName {
            get {
                return this.FitmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FitmentNameField, value) != true)) {
                    this.FitmentNameField = value;
                    this.RaisePropertyChanged("FitmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FloorNumber {
            get {
                return this.FloorNumberField;
            }
            set {
                if ((this.FloorNumberField.Equals(value) != true)) {
                    this.FloorNumberField = value;
                    this.RaisePropertyChanged("FloorNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FrontCode {
            get {
                return this.FrontCodeField;
            }
            set {
                if ((this.FrontCodeField.Equals(value) != true)) {
                    this.FrontCodeField = value;
                    this.RaisePropertyChanged("FrontCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FrontName {
            get {
                return this.FrontNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FrontNameField, value) != true)) {
                    this.FrontNameField = value;
                    this.RaisePropertyChanged("FrontName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HouseId {
            get {
                return this.HouseIdField;
            }
            set {
                if ((this.HouseIdField.Equals(value) != true)) {
                    this.HouseIdField = value;
                    this.RaisePropertyChanged("HouseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HouseNo {
            get {
                return this.HouseNoField;
            }
            set {
                if ((object.ReferenceEquals(this.HouseNoField, value) != true)) {
                    this.HouseNoField = value;
                    this.RaisePropertyChanged("HouseNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HouseTypeCode {
            get {
                return this.HouseTypeCodeField;
            }
            set {
                if ((this.HouseTypeCodeField.Equals(value) != true)) {
                    this.HouseTypeCodeField = value;
                    this.RaisePropertyChanged("HouseTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HouseTypeName {
            get {
                return this.HouseTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HouseTypeNameField, value) != true)) {
                    this.HouseTypeNameField = value;
                    this.RaisePropertyChanged("HouseTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MoneyUnitCode {
            get {
                return this.MoneyUnitCodeField;
            }
            set {
                if ((this.MoneyUnitCodeField.Equals(value) != true)) {
                    this.MoneyUnitCodeField = value;
                    this.RaisePropertyChanged("MoneyUnitCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MoneyUnitName {
            get {
                return this.MoneyUnitNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MoneyUnitNameField, value) != true)) {
                    this.MoneyUnitNameField = value;
                    this.RaisePropertyChanged("MoneyUnitName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OldID {
            get {
                return this.OldIDField;
            }
            set {
                if ((this.OldIDField.Equals(value) != true)) {
                    this.OldIDField = value;
                    this.RaisePropertyChanged("OldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PeiTao {
            get {
                return this.PeiTaoField;
            }
            set {
                if ((object.ReferenceEquals(this.PeiTaoField, value) != true)) {
                    this.PeiTaoField = value;
                    this.RaisePropertyChanged("PeiTao");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PurposeCode {
            get {
                return this.PurposeCodeField;
            }
            set {
                if ((this.PurposeCodeField.Equals(value) != true)) {
                    this.PurposeCodeField = value;
                    this.RaisePropertyChanged("PurposeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurposeName {
            get {
                return this.PurposeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PurposeNameField, value) != true)) {
                    this.PurposeNameField = value;
                    this.RaisePropertyChanged("PurposeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RecordWeek {
            get {
                return this.RecordWeekField;
            }
            set {
                if ((this.RecordWeekField.Equals(value) != true)) {
                    this.RecordWeekField = value;
                    this.RaisePropertyChanged("RecordWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RemainYear {
            get {
                return this.RemainYearField;
            }
            set {
                if ((this.RemainYearField.Equals(value) != true)) {
                    this.RemainYearField = value;
                    this.RaisePropertyChanged("RemainYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SaveDateTime {
            get {
                return this.SaveDateTimeField;
            }
            set {
                if ((this.SaveDateTimeField.Equals(value) != true)) {
                    this.SaveDateTimeField = value;
                    this.RaisePropertyChanged("SaveDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SaveUser {
            get {
                return this.SaveUserField;
            }
            set {
                if ((object.ReferenceEquals(this.SaveUserField, value) != true)) {
                    this.SaveUserField = value;
                    this.RaisePropertyChanged("SaveUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SightCode {
            get {
                return this.SightCodeField;
            }
            set {
                if ((this.SightCodeField.Equals(value) != true)) {
                    this.SightCodeField = value;
                    this.RaisePropertyChanged("SightCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceLink {
            get {
                return this.SourceLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceLinkField, value) != true)) {
                    this.SourceLinkField = value;
                    this.RaisePropertyChanged("SourceLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceName {
            get {
                return this.SourceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceNameField, value) != true)) {
                    this.SourceNameField = value;
                    this.RaisePropertyChanged("SourceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourcePhone {
            get {
                return this.SourcePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.SourcePhoneField, value) != true)) {
                    this.SourcePhoneField = value;
                    this.RaisePropertyChanged("SourcePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StructureCode {
            get {
                return this.StructureCodeField;
            }
            set {
                if ((this.StructureCodeField.Equals(value) != true)) {
                    this.StructureCodeField = value;
                    this.RaisePropertyChanged("StructureCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StructureName {
            get {
                return this.StructureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StructureNameField, value) != true)) {
                    this.StructureNameField = value;
                    this.RaisePropertyChanged("StructureName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubHouse {
            get {
                return this.SubHouseField;
            }
            set {
                if ((object.ReferenceEquals(this.SubHouseField, value) != true)) {
                    this.SubHouseField = value;
                    this.RaisePropertyChanged("SubHouse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SurveyId {
            get {
                return this.SurveyIdField;
            }
            set {
                if ((this.SurveyIdField.Equals(value) != true)) {
                    this.SurveyIdField = value;
                    this.RaisePropertyChanged("SurveyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalFloor {
            get {
                return this.TotalFloorField;
            }
            set {
                if ((this.TotalFloorField.Equals(value) != true)) {
                    this.TotalFloorField = value;
                    this.RaisePropertyChanged("TotalFloor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> UsableArea {
            get {
                return this.UsableAreaField;
            }
            set {
                if ((this.UsableAreaField.Equals(value) != true)) {
                    this.UsableAreaField = value;
                    this.RaisePropertyChanged("UsableArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((this.ValidField.Equals(value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZhuangXiu {
            get {
                return this.ZhuangXiuField;
            }
            set {
                if ((object.ReferenceEquals(this.ZhuangXiuField, value) != true)) {
                    this.ZhuangXiuField = value;
                    this.RaisePropertyChanged("ZhuangXiu");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataProject", Namespace="http://schemas.datacontract.org/2004/07/DataConv.Model")]
    [System.SerializableAttribute()]
    public partial class DataProject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherPinyinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherPinyinAllField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinYinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinYinAllField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityID {
            get {
                return this.CityIDField;
            }
            set {
                if ((this.CityIDField.Equals(value) != true)) {
                    this.CityIDField = value;
                    this.RaisePropertyChanged("CityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherName {
            get {
                return this.OtherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherNameField, value) != true)) {
                    this.OtherNameField = value;
                    this.RaisePropertyChanged("OtherName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherPinyin {
            get {
                return this.OtherPinyinField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherPinyinField, value) != true)) {
                    this.OtherPinyinField = value;
                    this.RaisePropertyChanged("OtherPinyin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherPinyinAll {
            get {
                return this.OtherPinyinAllField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherPinyinAllField, value) != true)) {
                    this.OtherPinyinAllField = value;
                    this.RaisePropertyChanged("OtherPinyinAll");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PinYin {
            get {
                return this.PinYinField;
            }
            set {
                if ((object.ReferenceEquals(this.PinYinField, value) != true)) {
                    this.PinYinField = value;
                    this.RaisePropertyChanged("PinYin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PinYinAll {
            get {
                return this.PinYinAllField;
            }
            set {
                if ((object.ReferenceEquals(this.PinYinAllField, value) != true)) {
                    this.PinYinAllField = value;
                    this.RaisePropertyChanged("PinYinAll");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProviderServiceRef.IProviderService")]
    public interface IProviderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderService/DoWork", ReplyAction="http://tempuri.org/IProviderService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProviderService/DoWork", ReplyAction="http://tempuri.org/IProviderService/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderService/QueryCityInfoList", ReplyAction="http://tempuri.org/IProviderService/QueryCityInfoListResponse")]
        DataConv.Consumer.ProviderServiceRef.City[] QueryCityInfoList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProviderService/QueryCityInfoList", ReplyAction="http://tempuri.org/IProviderService/QueryCityInfoListResponse")]
        System.IAsyncResult BeginQueryCityInfoList(System.AsyncCallback callback, object asyncState);
        
        DataConv.Consumer.ProviderServiceRef.City[] EndQueryCityInfoList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderService/QueryAreaInfoMap", ReplyAction="http://tempuri.org/IProviderService/QueryAreaInfoMapResponse")]
        DataConv.Consumer.ProviderServiceRef.Area[] QueryAreaInfoMap(int cityID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProviderService/QueryAreaInfoMap", ReplyAction="http://tempuri.org/IProviderService/QueryAreaInfoMapResponse")]
        System.IAsyncResult BeginQueryAreaInfoMap(int cityID, System.AsyncCallback callback, object asyncState);
        
        DataConv.Consumer.ProviderServiceRef.Area[] EndQueryAreaInfoMap(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderService/QueryPurposeInfoMap", ReplyAction="http://tempuri.org/IProviderService/QueryPurposeInfoMapResponse")]
        DataConv.Consumer.ProviderServiceRef.SysCode[] QueryPurposeInfoMap();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProviderService/QueryPurposeInfoMap", ReplyAction="http://tempuri.org/IProviderService/QueryPurposeInfoMapResponse")]
        System.IAsyncResult BeginQueryPurposeInfoMap(System.AsyncCallback callback, object asyncState);
        
        DataConv.Consumer.ProviderServiceRef.SysCode[] EndQueryPurposeInfoMap(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderService/QueryFrontInfoMap", ReplyAction="http://tempuri.org/IProviderService/QueryFrontInfoMapResponse")]
        DataConv.Consumer.ProviderServiceRef.SysCode[] QueryFrontInfoMap();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProviderService/QueryFrontInfoMap", ReplyAction="http://tempuri.org/IProviderService/QueryFrontInfoMapResponse")]
        System.IAsyncResult BeginQueryFrontInfoMap(System.AsyncCallback callback, object asyncState);
        
        DataConv.Consumer.ProviderServiceRef.SysCode[] EndQueryFrontInfoMap(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderService/QueryBuildingTypeInfoMap", ReplyAction="http://tempuri.org/IProviderService/QueryBuildingTypeInfoMapResponse")]
        DataConv.Consumer.ProviderServiceRef.SysCode[] QueryBuildingTypeInfoMap();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProviderService/QueryBuildingTypeInfoMap", ReplyAction="http://tempuri.org/IProviderService/QueryBuildingTypeInfoMapResponse")]
        System.IAsyncResult BeginQueryBuildingTypeInfoMap(System.AsyncCallback callback, object asyncState);
        
        DataConv.Consumer.ProviderServiceRef.SysCode[] EndQueryBuildingTypeInfoMap(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderService/QueryHouseTypeInfoMap", ReplyAction="http://tempuri.org/IProviderService/QueryHouseTypeInfoMapResponse")]
        DataConv.Consumer.ProviderServiceRef.SysCode[] QueryHouseTypeInfoMap();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProviderService/QueryHouseTypeInfoMap", ReplyAction="http://tempuri.org/IProviderService/QueryHouseTypeInfoMapResponse")]
        System.IAsyncResult BeginQueryHouseTypeInfoMap(System.AsyncCallback callback, object asyncState);
        
        DataConv.Consumer.ProviderServiceRef.SysCode[] EndQueryHouseTypeInfoMap(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderService/QueryStructureInfoMap", ReplyAction="http://tempuri.org/IProviderService/QueryStructureInfoMapResponse")]
        DataConv.Consumer.ProviderServiceRef.SysCode[] QueryStructureInfoMap();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProviderService/QueryStructureInfoMap", ReplyAction="http://tempuri.org/IProviderService/QueryStructureInfoMapResponse")]
        System.IAsyncResult BeginQueryStructureInfoMap(System.AsyncCallback callback, object asyncState);
        
        DataConv.Consumer.ProviderServiceRef.SysCode[] EndQueryStructureInfoMap(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderService/QueryFitmentInfoMap", ReplyAction="http://tempuri.org/IProviderService/QueryFitmentInfoMapResponse")]
        DataConv.Consumer.ProviderServiceRef.SysCode[] QueryFitmentInfoMap();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProviderService/QueryFitmentInfoMap", ReplyAction="http://tempuri.org/IProviderService/QueryFitmentInfoMapResponse")]
        System.IAsyncResult BeginQueryFitmentInfoMap(System.AsyncCallback callback, object asyncState);
        
        DataConv.Consumer.ProviderServiceRef.SysCode[] EndQueryFitmentInfoMap(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderService/QueryMoenyUnitInfoMap", ReplyAction="http://tempuri.org/IProviderService/QueryMoenyUnitInfoMapResponse")]
        DataConv.Consumer.ProviderServiceRef.SysCode[] QueryMoenyUnitInfoMap();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProviderService/QueryMoenyUnitInfoMap", ReplyAction="http://tempuri.org/IProviderService/QueryMoenyUnitInfoMapResponse")]
        System.IAsyncResult BeginQueryMoenyUnitInfoMap(System.AsyncCallback callback, object asyncState);
        
        DataConv.Consumer.ProviderServiceRef.SysCode[] EndQueryMoenyUnitInfoMap(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderService/BatchInsertDataCase", ReplyAction="http://tempuri.org/IProviderService/BatchInsertDataCaseResponse")]
        int BatchInsertDataCase(DataConv.Consumer.ProviderServiceRef.DataCase[] dc, string tableName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProviderService/BatchInsertDataCase", ReplyAction="http://tempuri.org/IProviderService/BatchInsertDataCaseResponse")]
        System.IAsyncResult BeginBatchInsertDataCase(DataConv.Consumer.ProviderServiceRef.DataCase[] dc, string tableName, System.AsyncCallback callback, object asyncState);
        
        int EndBatchInsertDataCase(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderService/QueryDataProjectList", ReplyAction="http://tempuri.org/IProviderService/QueryDataProjectListResponse")]
        DataConv.Consumer.ProviderServiceRef.DataProject[] QueryDataProjectList(int cityID, int AreaID, string tableName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProviderService/QueryDataProjectList", ReplyAction="http://tempuri.org/IProviderService/QueryDataProjectListResponse")]
        System.IAsyncResult BeginQueryDataProjectList(int cityID, int AreaID, string tableName, System.AsyncCallback callback, object asyncState);
        
        DataConv.Consumer.ProviderServiceRef.DataProject[] EndQueryDataProjectList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderService/PagingQueryProjectList", ReplyAction="http://tempuri.org/IProviderService/PagingQueryProjectListResponse")]
        DataConv.Consumer.ProviderServiceRef.DataProject[] PagingQueryProjectList(int CityID, int AreaID, string tName, int page);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProviderService/PagingQueryProjectList", ReplyAction="http://tempuri.org/IProviderService/PagingQueryProjectListResponse")]
        System.IAsyncResult BeginPagingQueryProjectList(int CityID, int AreaID, string tName, int page, System.AsyncCallback callback, object asyncState);
        
        DataConv.Consumer.ProviderServiceRef.DataProject[] EndPagingQueryProjectList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderService/PagingQueryCityList", ReplyAction="http://tempuri.org/IProviderService/PagingQueryCityListResponse")]
        DataConv.Consumer.ProviderServiceRef.City[] PagingQueryCityList(int page);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProviderService/PagingQueryCityList", ReplyAction="http://tempuri.org/IProviderService/PagingQueryCityListResponse")]
        System.IAsyncResult BeginPagingQueryCityList(int page, System.AsyncCallback callback, object asyncState);
        
        DataConv.Consumer.ProviderServiceRef.City[] EndPagingQueryCityList(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProviderServiceChannel : DataConv.Consumer.ProviderServiceRef.IProviderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryCityInfoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryCityInfoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DataConv.Consumer.ProviderServiceRef.City[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DataConv.Consumer.ProviderServiceRef.City[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryAreaInfoMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryAreaInfoMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DataConv.Consumer.ProviderServiceRef.Area[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DataConv.Consumer.ProviderServiceRef.Area[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryPurposeInfoMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryPurposeInfoMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DataConv.Consumer.ProviderServiceRef.SysCode[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DataConv.Consumer.ProviderServiceRef.SysCode[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryFrontInfoMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryFrontInfoMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DataConv.Consumer.ProviderServiceRef.SysCode[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DataConv.Consumer.ProviderServiceRef.SysCode[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryBuildingTypeInfoMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryBuildingTypeInfoMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DataConv.Consumer.ProviderServiceRef.SysCode[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DataConv.Consumer.ProviderServiceRef.SysCode[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryHouseTypeInfoMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryHouseTypeInfoMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DataConv.Consumer.ProviderServiceRef.SysCode[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DataConv.Consumer.ProviderServiceRef.SysCode[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryStructureInfoMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryStructureInfoMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DataConv.Consumer.ProviderServiceRef.SysCode[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DataConv.Consumer.ProviderServiceRef.SysCode[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryFitmentInfoMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryFitmentInfoMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DataConv.Consumer.ProviderServiceRef.SysCode[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DataConv.Consumer.ProviderServiceRef.SysCode[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryMoenyUnitInfoMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryMoenyUnitInfoMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DataConv.Consumer.ProviderServiceRef.SysCode[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DataConv.Consumer.ProviderServiceRef.SysCode[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BatchInsertDataCaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BatchInsertDataCaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryDataProjectListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryDataProjectListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DataConv.Consumer.ProviderServiceRef.DataProject[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DataConv.Consumer.ProviderServiceRef.DataProject[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PagingQueryProjectListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PagingQueryProjectListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DataConv.Consumer.ProviderServiceRef.DataProject[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DataConv.Consumer.ProviderServiceRef.DataProject[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PagingQueryCityListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PagingQueryCityListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DataConv.Consumer.ProviderServiceRef.City[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DataConv.Consumer.ProviderServiceRef.City[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProviderServiceClient : System.ServiceModel.ClientBase<DataConv.Consumer.ProviderServiceRef.IProviderService>, DataConv.Consumer.ProviderServiceRef.IProviderService {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueryCityInfoListDelegate;
        
        private EndOperationDelegate onEndQueryCityInfoListDelegate;
        
        private System.Threading.SendOrPostCallback onQueryCityInfoListCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueryAreaInfoMapDelegate;
        
        private EndOperationDelegate onEndQueryAreaInfoMapDelegate;
        
        private System.Threading.SendOrPostCallback onQueryAreaInfoMapCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueryPurposeInfoMapDelegate;
        
        private EndOperationDelegate onEndQueryPurposeInfoMapDelegate;
        
        private System.Threading.SendOrPostCallback onQueryPurposeInfoMapCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueryFrontInfoMapDelegate;
        
        private EndOperationDelegate onEndQueryFrontInfoMapDelegate;
        
        private System.Threading.SendOrPostCallback onQueryFrontInfoMapCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueryBuildingTypeInfoMapDelegate;
        
        private EndOperationDelegate onEndQueryBuildingTypeInfoMapDelegate;
        
        private System.Threading.SendOrPostCallback onQueryBuildingTypeInfoMapCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueryHouseTypeInfoMapDelegate;
        
        private EndOperationDelegate onEndQueryHouseTypeInfoMapDelegate;
        
        private System.Threading.SendOrPostCallback onQueryHouseTypeInfoMapCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueryStructureInfoMapDelegate;
        
        private EndOperationDelegate onEndQueryStructureInfoMapDelegate;
        
        private System.Threading.SendOrPostCallback onQueryStructureInfoMapCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueryFitmentInfoMapDelegate;
        
        private EndOperationDelegate onEndQueryFitmentInfoMapDelegate;
        
        private System.Threading.SendOrPostCallback onQueryFitmentInfoMapCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueryMoenyUnitInfoMapDelegate;
        
        private EndOperationDelegate onEndQueryMoenyUnitInfoMapDelegate;
        
        private System.Threading.SendOrPostCallback onQueryMoenyUnitInfoMapCompletedDelegate;
        
        private BeginOperationDelegate onBeginBatchInsertDataCaseDelegate;
        
        private EndOperationDelegate onEndBatchInsertDataCaseDelegate;
        
        private System.Threading.SendOrPostCallback onBatchInsertDataCaseCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueryDataProjectListDelegate;
        
        private EndOperationDelegate onEndQueryDataProjectListDelegate;
        
        private System.Threading.SendOrPostCallback onQueryDataProjectListCompletedDelegate;
        
        private BeginOperationDelegate onBeginPagingQueryProjectListDelegate;
        
        private EndOperationDelegate onEndPagingQueryProjectListDelegate;
        
        private System.Threading.SendOrPostCallback onPagingQueryProjectListCompletedDelegate;
        
        private BeginOperationDelegate onBeginPagingQueryCityListDelegate;
        
        private EndOperationDelegate onEndPagingQueryCityListDelegate;
        
        private System.Threading.SendOrPostCallback onPagingQueryCityListCompletedDelegate;
        
        public ProviderServiceClient() {
        }
        
        public ProviderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProviderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProviderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProviderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<QueryCityInfoListCompletedEventArgs> QueryCityInfoListCompleted;
        
        public event System.EventHandler<QueryAreaInfoMapCompletedEventArgs> QueryAreaInfoMapCompleted;
        
        public event System.EventHandler<QueryPurposeInfoMapCompletedEventArgs> QueryPurposeInfoMapCompleted;
        
        public event System.EventHandler<QueryFrontInfoMapCompletedEventArgs> QueryFrontInfoMapCompleted;
        
        public event System.EventHandler<QueryBuildingTypeInfoMapCompletedEventArgs> QueryBuildingTypeInfoMapCompleted;
        
        public event System.EventHandler<QueryHouseTypeInfoMapCompletedEventArgs> QueryHouseTypeInfoMapCompleted;
        
        public event System.EventHandler<QueryStructureInfoMapCompletedEventArgs> QueryStructureInfoMapCompleted;
        
        public event System.EventHandler<QueryFitmentInfoMapCompletedEventArgs> QueryFitmentInfoMapCompleted;
        
        public event System.EventHandler<QueryMoenyUnitInfoMapCompletedEventArgs> QueryMoenyUnitInfoMapCompleted;
        
        public event System.EventHandler<BatchInsertDataCaseCompletedEventArgs> BatchInsertDataCaseCompleted;
        
        public event System.EventHandler<QueryDataProjectListCompletedEventArgs> QueryDataProjectListCompleted;
        
        public event System.EventHandler<PagingQueryProjectListCompletedEventArgs> PagingQueryProjectListCompleted;
        
        public event System.EventHandler<PagingQueryCityListCompletedEventArgs> PagingQueryCityListCompleted;
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            this.EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        public DataConv.Consumer.ProviderServiceRef.City[] QueryCityInfoList() {
            return base.Channel.QueryCityInfoList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryCityInfoList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryCityInfoList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DataConv.Consumer.ProviderServiceRef.City[] EndQueryCityInfoList(System.IAsyncResult result) {
            return base.Channel.EndQueryCityInfoList(result);
        }
        
        private System.IAsyncResult OnBeginQueryCityInfoList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginQueryCityInfoList(callback, asyncState);
        }
        
        private object[] OnEndQueryCityInfoList(System.IAsyncResult result) {
            DataConv.Consumer.ProviderServiceRef.City[] retVal = this.EndQueryCityInfoList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnQueryCityInfoListCompleted(object state) {
            if ((this.QueryCityInfoListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryCityInfoListCompleted(this, new QueryCityInfoListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryCityInfoListAsync() {
            this.QueryCityInfoListAsync(null);
        }
        
        public void QueryCityInfoListAsync(object userState) {
            if ((this.onBeginQueryCityInfoListDelegate == null)) {
                this.onBeginQueryCityInfoListDelegate = new BeginOperationDelegate(this.OnBeginQueryCityInfoList);
            }
            if ((this.onEndQueryCityInfoListDelegate == null)) {
                this.onEndQueryCityInfoListDelegate = new EndOperationDelegate(this.OnEndQueryCityInfoList);
            }
            if ((this.onQueryCityInfoListCompletedDelegate == null)) {
                this.onQueryCityInfoListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryCityInfoListCompleted);
            }
            base.InvokeAsync(this.onBeginQueryCityInfoListDelegate, null, this.onEndQueryCityInfoListDelegate, this.onQueryCityInfoListCompletedDelegate, userState);
        }
        
        public DataConv.Consumer.ProviderServiceRef.Area[] QueryAreaInfoMap(int cityID) {
            return base.Channel.QueryAreaInfoMap(cityID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryAreaInfoMap(int cityID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryAreaInfoMap(cityID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DataConv.Consumer.ProviderServiceRef.Area[] EndQueryAreaInfoMap(System.IAsyncResult result) {
            return base.Channel.EndQueryAreaInfoMap(result);
        }
        
        private System.IAsyncResult OnBeginQueryAreaInfoMap(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cityID = ((int)(inValues[0]));
            return this.BeginQueryAreaInfoMap(cityID, callback, asyncState);
        }
        
        private object[] OnEndQueryAreaInfoMap(System.IAsyncResult result) {
            DataConv.Consumer.ProviderServiceRef.Area[] retVal = this.EndQueryAreaInfoMap(result);
            return new object[] {
                    retVal};
        }
        
        private void OnQueryAreaInfoMapCompleted(object state) {
            if ((this.QueryAreaInfoMapCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryAreaInfoMapCompleted(this, new QueryAreaInfoMapCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryAreaInfoMapAsync(int cityID) {
            this.QueryAreaInfoMapAsync(cityID, null);
        }
        
        public void QueryAreaInfoMapAsync(int cityID, object userState) {
            if ((this.onBeginQueryAreaInfoMapDelegate == null)) {
                this.onBeginQueryAreaInfoMapDelegate = new BeginOperationDelegate(this.OnBeginQueryAreaInfoMap);
            }
            if ((this.onEndQueryAreaInfoMapDelegate == null)) {
                this.onEndQueryAreaInfoMapDelegate = new EndOperationDelegate(this.OnEndQueryAreaInfoMap);
            }
            if ((this.onQueryAreaInfoMapCompletedDelegate == null)) {
                this.onQueryAreaInfoMapCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryAreaInfoMapCompleted);
            }
            base.InvokeAsync(this.onBeginQueryAreaInfoMapDelegate, new object[] {
                        cityID}, this.onEndQueryAreaInfoMapDelegate, this.onQueryAreaInfoMapCompletedDelegate, userState);
        }
        
        public DataConv.Consumer.ProviderServiceRef.SysCode[] QueryPurposeInfoMap() {
            return base.Channel.QueryPurposeInfoMap();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryPurposeInfoMap(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryPurposeInfoMap(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DataConv.Consumer.ProviderServiceRef.SysCode[] EndQueryPurposeInfoMap(System.IAsyncResult result) {
            return base.Channel.EndQueryPurposeInfoMap(result);
        }
        
        private System.IAsyncResult OnBeginQueryPurposeInfoMap(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginQueryPurposeInfoMap(callback, asyncState);
        }
        
        private object[] OnEndQueryPurposeInfoMap(System.IAsyncResult result) {
            DataConv.Consumer.ProviderServiceRef.SysCode[] retVal = this.EndQueryPurposeInfoMap(result);
            return new object[] {
                    retVal};
        }
        
        private void OnQueryPurposeInfoMapCompleted(object state) {
            if ((this.QueryPurposeInfoMapCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryPurposeInfoMapCompleted(this, new QueryPurposeInfoMapCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryPurposeInfoMapAsync() {
            this.QueryPurposeInfoMapAsync(null);
        }
        
        public void QueryPurposeInfoMapAsync(object userState) {
            if ((this.onBeginQueryPurposeInfoMapDelegate == null)) {
                this.onBeginQueryPurposeInfoMapDelegate = new BeginOperationDelegate(this.OnBeginQueryPurposeInfoMap);
            }
            if ((this.onEndQueryPurposeInfoMapDelegate == null)) {
                this.onEndQueryPurposeInfoMapDelegate = new EndOperationDelegate(this.OnEndQueryPurposeInfoMap);
            }
            if ((this.onQueryPurposeInfoMapCompletedDelegate == null)) {
                this.onQueryPurposeInfoMapCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryPurposeInfoMapCompleted);
            }
            base.InvokeAsync(this.onBeginQueryPurposeInfoMapDelegate, null, this.onEndQueryPurposeInfoMapDelegate, this.onQueryPurposeInfoMapCompletedDelegate, userState);
        }
        
        public DataConv.Consumer.ProviderServiceRef.SysCode[] QueryFrontInfoMap() {
            return base.Channel.QueryFrontInfoMap();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryFrontInfoMap(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryFrontInfoMap(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DataConv.Consumer.ProviderServiceRef.SysCode[] EndQueryFrontInfoMap(System.IAsyncResult result) {
            return base.Channel.EndQueryFrontInfoMap(result);
        }
        
        private System.IAsyncResult OnBeginQueryFrontInfoMap(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginQueryFrontInfoMap(callback, asyncState);
        }
        
        private object[] OnEndQueryFrontInfoMap(System.IAsyncResult result) {
            DataConv.Consumer.ProviderServiceRef.SysCode[] retVal = this.EndQueryFrontInfoMap(result);
            return new object[] {
                    retVal};
        }
        
        private void OnQueryFrontInfoMapCompleted(object state) {
            if ((this.QueryFrontInfoMapCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryFrontInfoMapCompleted(this, new QueryFrontInfoMapCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryFrontInfoMapAsync() {
            this.QueryFrontInfoMapAsync(null);
        }
        
        public void QueryFrontInfoMapAsync(object userState) {
            if ((this.onBeginQueryFrontInfoMapDelegate == null)) {
                this.onBeginQueryFrontInfoMapDelegate = new BeginOperationDelegate(this.OnBeginQueryFrontInfoMap);
            }
            if ((this.onEndQueryFrontInfoMapDelegate == null)) {
                this.onEndQueryFrontInfoMapDelegate = new EndOperationDelegate(this.OnEndQueryFrontInfoMap);
            }
            if ((this.onQueryFrontInfoMapCompletedDelegate == null)) {
                this.onQueryFrontInfoMapCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryFrontInfoMapCompleted);
            }
            base.InvokeAsync(this.onBeginQueryFrontInfoMapDelegate, null, this.onEndQueryFrontInfoMapDelegate, this.onQueryFrontInfoMapCompletedDelegate, userState);
        }
        
        public DataConv.Consumer.ProviderServiceRef.SysCode[] QueryBuildingTypeInfoMap() {
            return base.Channel.QueryBuildingTypeInfoMap();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryBuildingTypeInfoMap(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryBuildingTypeInfoMap(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DataConv.Consumer.ProviderServiceRef.SysCode[] EndQueryBuildingTypeInfoMap(System.IAsyncResult result) {
            return base.Channel.EndQueryBuildingTypeInfoMap(result);
        }
        
        private System.IAsyncResult OnBeginQueryBuildingTypeInfoMap(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginQueryBuildingTypeInfoMap(callback, asyncState);
        }
        
        private object[] OnEndQueryBuildingTypeInfoMap(System.IAsyncResult result) {
            DataConv.Consumer.ProviderServiceRef.SysCode[] retVal = this.EndQueryBuildingTypeInfoMap(result);
            return new object[] {
                    retVal};
        }
        
        private void OnQueryBuildingTypeInfoMapCompleted(object state) {
            if ((this.QueryBuildingTypeInfoMapCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryBuildingTypeInfoMapCompleted(this, new QueryBuildingTypeInfoMapCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryBuildingTypeInfoMapAsync() {
            this.QueryBuildingTypeInfoMapAsync(null);
        }
        
        public void QueryBuildingTypeInfoMapAsync(object userState) {
            if ((this.onBeginQueryBuildingTypeInfoMapDelegate == null)) {
                this.onBeginQueryBuildingTypeInfoMapDelegate = new BeginOperationDelegate(this.OnBeginQueryBuildingTypeInfoMap);
            }
            if ((this.onEndQueryBuildingTypeInfoMapDelegate == null)) {
                this.onEndQueryBuildingTypeInfoMapDelegate = new EndOperationDelegate(this.OnEndQueryBuildingTypeInfoMap);
            }
            if ((this.onQueryBuildingTypeInfoMapCompletedDelegate == null)) {
                this.onQueryBuildingTypeInfoMapCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryBuildingTypeInfoMapCompleted);
            }
            base.InvokeAsync(this.onBeginQueryBuildingTypeInfoMapDelegate, null, this.onEndQueryBuildingTypeInfoMapDelegate, this.onQueryBuildingTypeInfoMapCompletedDelegate, userState);
        }
        
        public DataConv.Consumer.ProviderServiceRef.SysCode[] QueryHouseTypeInfoMap() {
            return base.Channel.QueryHouseTypeInfoMap();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryHouseTypeInfoMap(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryHouseTypeInfoMap(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DataConv.Consumer.ProviderServiceRef.SysCode[] EndQueryHouseTypeInfoMap(System.IAsyncResult result) {
            return base.Channel.EndQueryHouseTypeInfoMap(result);
        }
        
        private System.IAsyncResult OnBeginQueryHouseTypeInfoMap(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginQueryHouseTypeInfoMap(callback, asyncState);
        }
        
        private object[] OnEndQueryHouseTypeInfoMap(System.IAsyncResult result) {
            DataConv.Consumer.ProviderServiceRef.SysCode[] retVal = this.EndQueryHouseTypeInfoMap(result);
            return new object[] {
                    retVal};
        }
        
        private void OnQueryHouseTypeInfoMapCompleted(object state) {
            if ((this.QueryHouseTypeInfoMapCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryHouseTypeInfoMapCompleted(this, new QueryHouseTypeInfoMapCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryHouseTypeInfoMapAsync() {
            this.QueryHouseTypeInfoMapAsync(null);
        }
        
        public void QueryHouseTypeInfoMapAsync(object userState) {
            if ((this.onBeginQueryHouseTypeInfoMapDelegate == null)) {
                this.onBeginQueryHouseTypeInfoMapDelegate = new BeginOperationDelegate(this.OnBeginQueryHouseTypeInfoMap);
            }
            if ((this.onEndQueryHouseTypeInfoMapDelegate == null)) {
                this.onEndQueryHouseTypeInfoMapDelegate = new EndOperationDelegate(this.OnEndQueryHouseTypeInfoMap);
            }
            if ((this.onQueryHouseTypeInfoMapCompletedDelegate == null)) {
                this.onQueryHouseTypeInfoMapCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryHouseTypeInfoMapCompleted);
            }
            base.InvokeAsync(this.onBeginQueryHouseTypeInfoMapDelegate, null, this.onEndQueryHouseTypeInfoMapDelegate, this.onQueryHouseTypeInfoMapCompletedDelegate, userState);
        }
        
        public DataConv.Consumer.ProviderServiceRef.SysCode[] QueryStructureInfoMap() {
            return base.Channel.QueryStructureInfoMap();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryStructureInfoMap(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryStructureInfoMap(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DataConv.Consumer.ProviderServiceRef.SysCode[] EndQueryStructureInfoMap(System.IAsyncResult result) {
            return base.Channel.EndQueryStructureInfoMap(result);
        }
        
        private System.IAsyncResult OnBeginQueryStructureInfoMap(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginQueryStructureInfoMap(callback, asyncState);
        }
        
        private object[] OnEndQueryStructureInfoMap(System.IAsyncResult result) {
            DataConv.Consumer.ProviderServiceRef.SysCode[] retVal = this.EndQueryStructureInfoMap(result);
            return new object[] {
                    retVal};
        }
        
        private void OnQueryStructureInfoMapCompleted(object state) {
            if ((this.QueryStructureInfoMapCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryStructureInfoMapCompleted(this, new QueryStructureInfoMapCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryStructureInfoMapAsync() {
            this.QueryStructureInfoMapAsync(null);
        }
        
        public void QueryStructureInfoMapAsync(object userState) {
            if ((this.onBeginQueryStructureInfoMapDelegate == null)) {
                this.onBeginQueryStructureInfoMapDelegate = new BeginOperationDelegate(this.OnBeginQueryStructureInfoMap);
            }
            if ((this.onEndQueryStructureInfoMapDelegate == null)) {
                this.onEndQueryStructureInfoMapDelegate = new EndOperationDelegate(this.OnEndQueryStructureInfoMap);
            }
            if ((this.onQueryStructureInfoMapCompletedDelegate == null)) {
                this.onQueryStructureInfoMapCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryStructureInfoMapCompleted);
            }
            base.InvokeAsync(this.onBeginQueryStructureInfoMapDelegate, null, this.onEndQueryStructureInfoMapDelegate, this.onQueryStructureInfoMapCompletedDelegate, userState);
        }
        
        public DataConv.Consumer.ProviderServiceRef.SysCode[] QueryFitmentInfoMap() {
            return base.Channel.QueryFitmentInfoMap();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryFitmentInfoMap(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryFitmentInfoMap(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DataConv.Consumer.ProviderServiceRef.SysCode[] EndQueryFitmentInfoMap(System.IAsyncResult result) {
            return base.Channel.EndQueryFitmentInfoMap(result);
        }
        
        private System.IAsyncResult OnBeginQueryFitmentInfoMap(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginQueryFitmentInfoMap(callback, asyncState);
        }
        
        private object[] OnEndQueryFitmentInfoMap(System.IAsyncResult result) {
            DataConv.Consumer.ProviderServiceRef.SysCode[] retVal = this.EndQueryFitmentInfoMap(result);
            return new object[] {
                    retVal};
        }
        
        private void OnQueryFitmentInfoMapCompleted(object state) {
            if ((this.QueryFitmentInfoMapCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryFitmentInfoMapCompleted(this, new QueryFitmentInfoMapCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryFitmentInfoMapAsync() {
            this.QueryFitmentInfoMapAsync(null);
        }
        
        public void QueryFitmentInfoMapAsync(object userState) {
            if ((this.onBeginQueryFitmentInfoMapDelegate == null)) {
                this.onBeginQueryFitmentInfoMapDelegate = new BeginOperationDelegate(this.OnBeginQueryFitmentInfoMap);
            }
            if ((this.onEndQueryFitmentInfoMapDelegate == null)) {
                this.onEndQueryFitmentInfoMapDelegate = new EndOperationDelegate(this.OnEndQueryFitmentInfoMap);
            }
            if ((this.onQueryFitmentInfoMapCompletedDelegate == null)) {
                this.onQueryFitmentInfoMapCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryFitmentInfoMapCompleted);
            }
            base.InvokeAsync(this.onBeginQueryFitmentInfoMapDelegate, null, this.onEndQueryFitmentInfoMapDelegate, this.onQueryFitmentInfoMapCompletedDelegate, userState);
        }
        
        public DataConv.Consumer.ProviderServiceRef.SysCode[] QueryMoenyUnitInfoMap() {
            return base.Channel.QueryMoenyUnitInfoMap();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryMoenyUnitInfoMap(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryMoenyUnitInfoMap(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DataConv.Consumer.ProviderServiceRef.SysCode[] EndQueryMoenyUnitInfoMap(System.IAsyncResult result) {
            return base.Channel.EndQueryMoenyUnitInfoMap(result);
        }
        
        private System.IAsyncResult OnBeginQueryMoenyUnitInfoMap(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginQueryMoenyUnitInfoMap(callback, asyncState);
        }
        
        private object[] OnEndQueryMoenyUnitInfoMap(System.IAsyncResult result) {
            DataConv.Consumer.ProviderServiceRef.SysCode[] retVal = this.EndQueryMoenyUnitInfoMap(result);
            return new object[] {
                    retVal};
        }
        
        private void OnQueryMoenyUnitInfoMapCompleted(object state) {
            if ((this.QueryMoenyUnitInfoMapCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryMoenyUnitInfoMapCompleted(this, new QueryMoenyUnitInfoMapCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryMoenyUnitInfoMapAsync() {
            this.QueryMoenyUnitInfoMapAsync(null);
        }
        
        public void QueryMoenyUnitInfoMapAsync(object userState) {
            if ((this.onBeginQueryMoenyUnitInfoMapDelegate == null)) {
                this.onBeginQueryMoenyUnitInfoMapDelegate = new BeginOperationDelegate(this.OnBeginQueryMoenyUnitInfoMap);
            }
            if ((this.onEndQueryMoenyUnitInfoMapDelegate == null)) {
                this.onEndQueryMoenyUnitInfoMapDelegate = new EndOperationDelegate(this.OnEndQueryMoenyUnitInfoMap);
            }
            if ((this.onQueryMoenyUnitInfoMapCompletedDelegate == null)) {
                this.onQueryMoenyUnitInfoMapCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryMoenyUnitInfoMapCompleted);
            }
            base.InvokeAsync(this.onBeginQueryMoenyUnitInfoMapDelegate, null, this.onEndQueryMoenyUnitInfoMapDelegate, this.onQueryMoenyUnitInfoMapCompletedDelegate, userState);
        }
        
        public int BatchInsertDataCase(DataConv.Consumer.ProviderServiceRef.DataCase[] dc, string tableName) {
            return base.Channel.BatchInsertDataCase(dc, tableName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginBatchInsertDataCase(DataConv.Consumer.ProviderServiceRef.DataCase[] dc, string tableName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBatchInsertDataCase(dc, tableName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndBatchInsertDataCase(System.IAsyncResult result) {
            return base.Channel.EndBatchInsertDataCase(result);
        }
        
        private System.IAsyncResult OnBeginBatchInsertDataCase(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DataConv.Consumer.ProviderServiceRef.DataCase[] dc = ((DataConv.Consumer.ProviderServiceRef.DataCase[])(inValues[0]));
            string tableName = ((string)(inValues[1]));
            return this.BeginBatchInsertDataCase(dc, tableName, callback, asyncState);
        }
        
        private object[] OnEndBatchInsertDataCase(System.IAsyncResult result) {
            int retVal = this.EndBatchInsertDataCase(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBatchInsertDataCaseCompleted(object state) {
            if ((this.BatchInsertDataCaseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BatchInsertDataCaseCompleted(this, new BatchInsertDataCaseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BatchInsertDataCaseAsync(DataConv.Consumer.ProviderServiceRef.DataCase[] dc, string tableName) {
            this.BatchInsertDataCaseAsync(dc, tableName, null);
        }
        
        public void BatchInsertDataCaseAsync(DataConv.Consumer.ProviderServiceRef.DataCase[] dc, string tableName, object userState) {
            if ((this.onBeginBatchInsertDataCaseDelegate == null)) {
                this.onBeginBatchInsertDataCaseDelegate = new BeginOperationDelegate(this.OnBeginBatchInsertDataCase);
            }
            if ((this.onEndBatchInsertDataCaseDelegate == null)) {
                this.onEndBatchInsertDataCaseDelegate = new EndOperationDelegate(this.OnEndBatchInsertDataCase);
            }
            if ((this.onBatchInsertDataCaseCompletedDelegate == null)) {
                this.onBatchInsertDataCaseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBatchInsertDataCaseCompleted);
            }
            base.InvokeAsync(this.onBeginBatchInsertDataCaseDelegate, new object[] {
                        dc,
                        tableName}, this.onEndBatchInsertDataCaseDelegate, this.onBatchInsertDataCaseCompletedDelegate, userState);
        }
        
        public DataConv.Consumer.ProviderServiceRef.DataProject[] QueryDataProjectList(int cityID, int AreaID, string tableName) {
            return base.Channel.QueryDataProjectList(cityID, AreaID, tableName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryDataProjectList(int cityID, int AreaID, string tableName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryDataProjectList(cityID, AreaID, tableName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DataConv.Consumer.ProviderServiceRef.DataProject[] EndQueryDataProjectList(System.IAsyncResult result) {
            return base.Channel.EndQueryDataProjectList(result);
        }
        
        private System.IAsyncResult OnBeginQueryDataProjectList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int cityID = ((int)(inValues[0]));
            int AreaID = ((int)(inValues[1]));
            string tableName = ((string)(inValues[2]));
            return this.BeginQueryDataProjectList(cityID, AreaID, tableName, callback, asyncState);
        }
        
        private object[] OnEndQueryDataProjectList(System.IAsyncResult result) {
            DataConv.Consumer.ProviderServiceRef.DataProject[] retVal = this.EndQueryDataProjectList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnQueryDataProjectListCompleted(object state) {
            if ((this.QueryDataProjectListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryDataProjectListCompleted(this, new QueryDataProjectListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryDataProjectListAsync(int cityID, int AreaID, string tableName) {
            this.QueryDataProjectListAsync(cityID, AreaID, tableName, null);
        }
        
        public void QueryDataProjectListAsync(int cityID, int AreaID, string tableName, object userState) {
            if ((this.onBeginQueryDataProjectListDelegate == null)) {
                this.onBeginQueryDataProjectListDelegate = new BeginOperationDelegate(this.OnBeginQueryDataProjectList);
            }
            if ((this.onEndQueryDataProjectListDelegate == null)) {
                this.onEndQueryDataProjectListDelegate = new EndOperationDelegate(this.OnEndQueryDataProjectList);
            }
            if ((this.onQueryDataProjectListCompletedDelegate == null)) {
                this.onQueryDataProjectListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryDataProjectListCompleted);
            }
            base.InvokeAsync(this.onBeginQueryDataProjectListDelegate, new object[] {
                        cityID,
                        AreaID,
                        tableName}, this.onEndQueryDataProjectListDelegate, this.onQueryDataProjectListCompletedDelegate, userState);
        }
        
        public DataConv.Consumer.ProviderServiceRef.DataProject[] PagingQueryProjectList(int CityID, int AreaID, string tName, int page) {
            return base.Channel.PagingQueryProjectList(CityID, AreaID, tName, page);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPagingQueryProjectList(int CityID, int AreaID, string tName, int page, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPagingQueryProjectList(CityID, AreaID, tName, page, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DataConv.Consumer.ProviderServiceRef.DataProject[] EndPagingQueryProjectList(System.IAsyncResult result) {
            return base.Channel.EndPagingQueryProjectList(result);
        }
        
        private System.IAsyncResult OnBeginPagingQueryProjectList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int CityID = ((int)(inValues[0]));
            int AreaID = ((int)(inValues[1]));
            string tName = ((string)(inValues[2]));
            int page = ((int)(inValues[3]));
            return this.BeginPagingQueryProjectList(CityID, AreaID, tName, page, callback, asyncState);
        }
        
        private object[] OnEndPagingQueryProjectList(System.IAsyncResult result) {
            DataConv.Consumer.ProviderServiceRef.DataProject[] retVal = this.EndPagingQueryProjectList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPagingQueryProjectListCompleted(object state) {
            if ((this.PagingQueryProjectListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PagingQueryProjectListCompleted(this, new PagingQueryProjectListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PagingQueryProjectListAsync(int CityID, int AreaID, string tName, int page) {
            this.PagingQueryProjectListAsync(CityID, AreaID, tName, page, null);
        }
        
        public void PagingQueryProjectListAsync(int CityID, int AreaID, string tName, int page, object userState) {
            if ((this.onBeginPagingQueryProjectListDelegate == null)) {
                this.onBeginPagingQueryProjectListDelegate = new BeginOperationDelegate(this.OnBeginPagingQueryProjectList);
            }
            if ((this.onEndPagingQueryProjectListDelegate == null)) {
                this.onEndPagingQueryProjectListDelegate = new EndOperationDelegate(this.OnEndPagingQueryProjectList);
            }
            if ((this.onPagingQueryProjectListCompletedDelegate == null)) {
                this.onPagingQueryProjectListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPagingQueryProjectListCompleted);
            }
            base.InvokeAsync(this.onBeginPagingQueryProjectListDelegate, new object[] {
                        CityID,
                        AreaID,
                        tName,
                        page}, this.onEndPagingQueryProjectListDelegate, this.onPagingQueryProjectListCompletedDelegate, userState);
        }
        
        public DataConv.Consumer.ProviderServiceRef.City[] PagingQueryCityList(int page) {
            return base.Channel.PagingQueryCityList(page);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPagingQueryCityList(int page, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPagingQueryCityList(page, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DataConv.Consumer.ProviderServiceRef.City[] EndPagingQueryCityList(System.IAsyncResult result) {
            return base.Channel.EndPagingQueryCityList(result);
        }
        
        private System.IAsyncResult OnBeginPagingQueryCityList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int page = ((int)(inValues[0]));
            return this.BeginPagingQueryCityList(page, callback, asyncState);
        }
        
        private object[] OnEndPagingQueryCityList(System.IAsyncResult result) {
            DataConv.Consumer.ProviderServiceRef.City[] retVal = this.EndPagingQueryCityList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPagingQueryCityListCompleted(object state) {
            if ((this.PagingQueryCityListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PagingQueryCityListCompleted(this, new PagingQueryCityListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PagingQueryCityListAsync(int page) {
            this.PagingQueryCityListAsync(page, null);
        }
        
        public void PagingQueryCityListAsync(int page, object userState) {
            if ((this.onBeginPagingQueryCityListDelegate == null)) {
                this.onBeginPagingQueryCityListDelegate = new BeginOperationDelegate(this.OnBeginPagingQueryCityList);
            }
            if ((this.onEndPagingQueryCityListDelegate == null)) {
                this.onEndPagingQueryCityListDelegate = new EndOperationDelegate(this.OnEndPagingQueryCityList);
            }
            if ((this.onPagingQueryCityListCompletedDelegate == null)) {
                this.onPagingQueryCityListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPagingQueryCityListCompleted);
            }
            base.InvokeAsync(this.onBeginPagingQueryCityListDelegate, new object[] {
                        page}, this.onEndPagingQueryCityListDelegate, this.onPagingQueryCityListCompletedDelegate, userState);
        }
    }
}
