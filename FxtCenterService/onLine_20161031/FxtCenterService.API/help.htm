<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
    <style>
        body{background:#eee;}
        *{padding:0;margin:0;zoom:1;font-size:12px;resize:none;outline:none;font-family:Verdana;}
    .maintable{width:900px;background:#ccc;margin:10px auto;}
    .maintable th{background:#069;color:#fff;line-height:30px;font-size:14px;}
    .maintable td{background:#fff;line-height:20px;}
    .maintable td.left{width:180px;background:#f9f9f9;}
    .tbparams{background:#ccc;width:100%;}
    .tbparams th{background:#eee;color:#000;font-weight:normal;line-height:22px;font-size:12px;text-align:center;}
    .tbparams td{background:#fff;padding:3px;}
    ul{list-style:none;}
    ul.params,div.content{border:1px solid #ccc;background:#f9f9f9;}
    ul.params li{border-bottom:1px solid #ccc;line-height:25px;margin:1px;}
    ul.index li{padding:10px;line-height:25px;color:#069;}
    
    div.content{padding:5px;}
    #apilist{margin:5px;}
    #apilist li{cursor:default;padding:3px;}
    #apilist li.over{background:#ccc;}
    #apilist li.active{background:#069;color:#fff;font-weight:bold;}
    #apicontent{margin:5px;}
    #apicontent li{cursor:default;}
    #apicontent li strong{display:block;background:#eee;line-height:25px;text-indent:10px;border-left:8px solid #ccc;
                          }
    ul.ulapi li{border-top:1px solid #ccc;border-bottom:1px solid #ccc;background:#eee;text-indent:10px;}
    #apicontent li.desc{margin:10px;border:0;background:#fff;}
    #apicontent span.mobile{color:#c00;}
    #apicontent li.step{margin-top:10px;font-weight:bold;}
    font.red{color:#c00;}
    font.memo{color:#063;}
    #apicontent li label{display:inline-block;width:120px;background:#eee;border-right:1px solid #ccc;text-align:right;
                         padding-right:10px;margin-right:10px;font-weight:normal;}
    
    textarea{width:500px;height:200px;vertical-align:top;}
    </style>
    <script src="http://192.168.0.99:88/js/jquery-1.7.1.min.js" type="text/javascript"></script>
    <script src="http://192.168.0.99:88/js/json2.js" type="text/javascript"></script>
    <script type="text/javascript">
        function FormatJSON(oData, sIndent) {
            if (arguments.length < 2) {
                var sIndent = "";
            }
            var sIndentStyle = "&nbsp;&nbsp;&nbsp;&nbsp;";
            var sDataType = RealTypeOf(oData);

            // open object
            if (sDataType == "array") {
                if (oData.length == 0) {
                    return "[]";
                }
                var sHTML = "[";
            } else {
                var iCount = 0;
                $.each(oData, function () {
                    iCount++;
                    return;
                });
                if (iCount == 0) { // object is empty
                    return "{}";
                }
                var sHTML = "{";
            }

            // loop through items
            var iCount = 0;
            $.each(oData, function (sKey, vValue) {
                if (iCount > 0) {
                    sHTML += ",";
                }
                if (sDataType == "array") {
                    sHTML += ("<br>" + sIndent + sIndentStyle);
                } else {
                    sHTML += ("<br>" + sIndent + sIndentStyle + "\"" + sKey + "\"" + ": ");
                }

                // display relevant data type
                switch (RealTypeOf(vValue)) {
                    case "array":
                    case "object":
                        sHTML += FormatJSON(vValue, (sIndent + sIndentStyle));
                        break;
                    case "boolean":
                    case "number":
                        sHTML += vValue.toString();
                        break;
                    case "null":
                        sHTML += "null";
                        break;
                    case "string":
                        sHTML += ("\"" + vValue + "\"");
                        break;
                    default:
                        sHTML += ("TYPEOF: " + typeof (vValue));
                }

                // loop
                iCount++;
            });

            // close object
            if (sDataType == "array") {
                sHTML += ("<br>" + sIndent + "]");
            } else {
                sHTML += ("<br>" + sIndent +  "}");
            }

            // return
            return sHTML;
        }
        function RealTypeOf(v) {
            if (typeof (v) == "object") {
                if (v === null) return "null";
                if (v.constructor == (new Array).constructor) return "array";
                if (v.constructor == (new Date).constructor) return "date";
                if (v.constructor == (new RegExp).constructor) return "regex";
                return "object";
            }
            return typeof (v);
        }
        var mustparams = [
        { name: "cityid", desc: "城市ID", must: true },
        { name: "fxtcompanyid",value:"", desc: "评估机构ID", must: true },
        { name: "userid", value: "", desc: "登录用户ID", must: true },
        { name: "strdate", value: "", desc: "验证时间", must: true },
        { name: "strcode", value: "", desc: "验证字符串，MD5加密strdate参数后得出", must: true }
        ]
        
        //api
        var api = [
        { name: "获取楼盘列表", url: "handlers/projectlist.ashx", params: [
            { name: "type", desc: "", must: true },            
            ], output: { "returntype": 1, "returntext": "", data: null, debug: null }
        },
        { name: "获取楼栋列表", url: "handlers/buildinglist.ashx", params: [
            { name: "userid", desc: "", must: true },
            { name: "type", desc: "", must: true },
            { name: "systypecode", desc: "", must: true }
            ], output: { "returntype": 1, "returntext": "", data: null, debug: null }
        },
        { name: "获取楼层列表", url: "handlers/floorlist.ashx", params: [
            { name: "userid", desc: "", must: true },
            { name: "type", desc: "", must: true },
            { name: "systypecode", desc: "", must: true }
            ], output: { "returntype": 1, "returntext": "", data: null, debug: null }
        },
        { name: "获取房号列表", url: "handlers/houselist.ashx", params: [
            { name: "userid", desc: "", must: true },
            { name: "type", desc: "", must: true },
            { name: "systypecode", desc: "", must: true }
            ], output: { "returntype": 1, "returntext": "", data: null, debug: null }
        },
        { name: "获取省份列表", url: "handlers/cityarea.ashx", params: [
            { name: "type", desc: "provincelist", must: true },
            ], output: { "returntype": 1, "returntext": "", data: null, debug: null }
        },
        { name: "获取城市列表", url: "handlers/cityarea.ashx", params: [
            { name: "type", desc: "citylist", must: true },
            { name: "provinceid", desc: "省份ID", must: true }
            ], output: { "returntype": 1, "returntext": "", data: null, debug: null }
        },
        { name: "获取区域列表", url: "handlers/cityarea.ashx", params: [            
            { name: "type", desc: "arealist", must: true },
            { name: "cityid", desc: "城市ID", must: true },
            { name: "areaid", desc: "区域ID(多个用,分割)", must: true }
            ], output: { "returntype": 1, "returntext": "", data: null, debug: null }
        }
        ];
        
            function u(o) {return typeof (o) != "undefined";}
            $(function () {
                $.each(api, function (i, item) {
                    var li = $("<li>" + (i + 1) + " : " + item.name + "</li>");
                    li.data("data", item);
                    $("#apilist").append(li);
                });
                $("#apilist li").click(function () {                    
                    $("#apilist li.active").removeClass("active");
                    $(this).addClass("active");
                    var html = [];
                    var item = $(this).data("data");
                    html.push('<li><strong>接口名称</strong></li><li class="desc">' + item.name + '</li>');
                    html.push('<li><strong>Url</strong></li><li class="desc">' + item.url + '</li>');
                    var params = [];
                    function addparam(p) {
                    params.push('<li><label>' + p.name + '</label>' + '<input type=checkbox disabled ' + (p.must ? ' checked' : '') + '/>' + (p.must ? ' <font class="red">必填</font>' : ' 必填') + ' ' + (typeof (p.value) == "undefined" || p.value == "" ? "" : '[ = "' + p.value + '" ] ') + '<font class="memo">' + (typeof (p.desc) == "undefined" || p.desc == "" ? '' : '// ' + p.desc) + '</font></li>');
                    }
                    if (item.name != "登录") {
                    $.each(mustparams, function (i, p) {
                    addparam(p);
                    });
                    }
                    $.each(item.params, function (i, p) {
                    addparam(p);
                    });
                    html.push('<li><strong>参数</strong></li><li class="desc"><ul class="params">' + params.join("") + '</ul></li>');
                    html.push('<li><strong>输出格式</strong></li><li class="desc"><div class="content">' + FormatJSON(item.output, "&nbsp;&nbsp;&nbsp;&nbsp;") + '</div></li>');
                    $("#apicontent").html(html.join(""));
                   
                }).mouseenter(function () { $(this).addClass("over"); })
            .mouseout(function () { $(this).removeClass("over"); });
            });
    </script>
</head>
<body>
<table cellpadding=0 cellspacing=1 border=0 class="maintable">
<tr><th colspan="2">云查勘企业版功能接口说明 V3.0</th></tr>
<tr><td valign="top" class="left">
<ul id="apilist"></ul>
</td>
<td valign="top">
<ul class="index"><li>本说明用于协助和指导相关开发人员熟悉和使用云查勘企业版功能接口。点击左侧功能名称查看具体说明。<br />
版本说明：不兼容V2.0接口，主要区别在于加入自定义字段的使用。</li></ul>
<ul id="apicontent">
</ul></td>
</tr>
</table>
</body>
</html>
